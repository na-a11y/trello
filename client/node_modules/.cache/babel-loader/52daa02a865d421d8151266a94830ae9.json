{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\trello-clone-mern\\\\client\\\\src\\\\Components\\\\AlertSnackBar.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { closeAlert } from \"../Redux/Slices/alertSlice\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\n\nconst AlertSnackBar = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    open,\n    message,\n    severity,\n    duration,\n    nextRoute\n  } = useSelector(state => state.alert);\n  const history = useHistory();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    dispatch(closeAlert());\n\n    try {\n      history.push(nextRoute);\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: duration,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: severity,\n        sx: {\n          width: \"100%\"\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AlertSnackBar, \"amkf4+uRFUoiJrYnGI229a6UR/k=\", false, function () {\n  return [useDispatch, useSelector, useHistory];\n});\n\n_c3 = AlertSnackBar;\nexport default AlertSnackBar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"AlertSnackBar\");","map":{"version":3,"sources":["C:/Users/Dell/trello-clone-mern/client/src/Components/AlertSnackBar.js"],"names":["React","Snackbar","MuiAlert","useSelector","useDispatch","closeAlert","useHistory","Alert","forwardRef","props","ref","AlertSnackBar","dispatch","open","message","severity","duration","nextRoute","state","alert","history","handleClose","event","reason","push","error","vertical","horizontal","width"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,KAAK,gBAAGP,KAAK,CAACQ,UAAN,MAAiB,SAASD,KAAT,CAAeE,KAAf,EAAsBC,GAAtB,EAA2B;AACxD,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,GAAG,EAAEA,GAA7B;AAAkC,IAAA,OAAO,EAAC,QAA1C;AAAA,OAAuDD;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFa,CAAd;MAAMF,K;;AAIN,MAAMI,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,QAA3B;AAAqCC,IAAAA;AAArC,MAAmDd,WAAW,CACjEe,KAAD,IAAWA,KAAK,CAACC,KADiD,CAApE;AAGA,QAAMC,OAAO,GAAGd,UAAU,EAA1B;;AACA,QAAMe,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDX,IAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;;AACA,QAAI;AACFe,MAAAA,OAAO,CAACI,IAAR,CAAaP,SAAb;AACD,KAFD,CAEE,OAAOQ,KAAP,EAAc,CAAE;AACnB,GARD;;AAUA,sBACE;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEZ,IADR;AAEE,MAAA,gBAAgB,EAAEG,QAFpB;AAGE,MAAA,OAAO,EAAEK,WAHX;AAIE,MAAA,YAAY,EAAE;AAAEK,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,UAAU,EAAE;AAAlC,OAJhB;AAAA,6BAME,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEN,WAAhB;AAA6B,QAAA,QAAQ,EAAEN,QAAvC;AAAiD,QAAA,EAAE,EAAE;AAAEa,UAAAA,KAAK,EAAE;AAAT,SAArD;AAAA,kBACGd;AADH;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CA9BD;;GAAMH,a;UACaP,W,EACwCD,W,EAGzCG,U;;;MALZK,a;AAgCN,eAAeA,aAAf","sourcesContent":["import * as React from \"react\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { closeAlert } from \"../Redux/Slices/alertSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst AlertSnackBar = () => {\r\n  const dispatch = useDispatch();\r\n  const { open, message, severity, duration, nextRoute } = useSelector(\r\n    (state) => state.alert\r\n  );\r\n  const history = useHistory();\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    dispatch(closeAlert());\r\n    try {\r\n      history.push(nextRoute);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={duration}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: \"100%\" }}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlertSnackBar;\r\n"]},"metadata":{},"sourceType":"module"}