{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\trello-clone-mern\\\\client\\\\src\\\\Components\\\\Modals\\\\EditCardModal\\\\Features\\\\Features.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Container, FeatureContainer, Title, RowContainer, Label, AddLabel, DateDropDown, DateText, CompleteLabel, OverDueLabel } from './styled';\nimport MembersFeature from './MembersFeature';\nimport ArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport Checkbox from '../ReUsableComponents/Checkbox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BasePopover from '../ReUsableComponents/BasePopover';\nimport LabelsPopover from '../Popovers/Labels/LabelsPopover';\nimport moment from 'moment';\nimport { dateCompletedUpdate } from '../../../../Services/cardService';\nimport DatePopover from '../Popovers/Date/DatePopover';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Features = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const card = useSelector(state => state.card);\n  const ref = useRef();\n  const [dateCheck, setDateCheck] = useState(card.date.completed);\n  const [labelPopover, setLabelPopover] = React.useState(null);\n  const [labelsBackArrow, setLabelsBackArrow] = React.useState(false);\n  const [labelsTitle, setLabelsTitle] = React.useState('Labels');\n  const [datePopover, setDatePopover] = React.useState(null);\n  useEffect(() => {\n    setDateCheck(card.date.completed);\n  }, [card.date.completed]);\n\n  const anySelectedLabel = () => {\n    return card.labels.filter(label => label.selected);\n  };\n\n  const handleDateCompletedClick = async param => {\n    setDateCheck(param);\n    await dateCompletedUpdate(card.cardId, card.listId, card.boardId, param, dispatch);\n  };\n\n  const formatDate = date => {\n    if (moment(date).toDate().getFullYear() < new Date().getFullYear()) return moment(date).format('MMM DD, yyyy');else return moment(date).format('MMM DD');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [card.members.length > 0 && /*#__PURE__*/_jsxDEV(FeatureContainer, {\n      children: /*#__PURE__*/_jsxDEV(MembersFeature, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), anySelectedLabel().length > 0 && /*#__PURE__*/_jsxDEV(FeatureContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        ref: ref,\n        children: \"Labels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(RowContainer, {\n        children: [anySelectedLabel().map(label => {\n          return /*#__PURE__*/_jsxDEV(Label, {\n            onClick: event => {\n              setLabelPopover(ref.current);\n            },\n            color: label.color,\n            hoverColor: label.backColor,\n            children: label.text\n          }, label._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(AddLabel, {\n          onClick: event => setLabelPopover(event.currentTarget),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this), labelPopover && /*#__PURE__*/_jsxDEV(BasePopover, {\n          anchorElement: labelPopover,\n          closeCallback: () => {\n            setLabelPopover(null);\n            setLabelsTitle('Labels');\n            setLabelsBackArrow(false);\n          },\n          title: labelsTitle,\n          backClick: () => {\n            setLabelsTitle('Labels');\n            setLabelsBackArrow(false);\n          },\n          backArrow: labelsBackArrow,\n          contents: /*#__PURE__*/_jsxDEV(LabelsPopover, {\n            currentPage: labelsTitle,\n            titleCallback: event => setLabelsTitle(event),\n            arrowCallback: event => {\n              setLabelsBackArrow(event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), (card.date.startDate || card.date.dueDate) && /*#__PURE__*/_jsxDEV(FeatureContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: card.date.startDate ? card.date.dueDate ? 'Dates' : 'Start date' : 'Due date'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(RowContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: dateCheck,\n          clickCallback: handleDateCompletedClick,\n          hidden: !card.date.dueDate ? true : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(DateDropDown, {\n          onClick: event => setDatePopover(event.currentTarget),\n          children: [/*#__PURE__*/_jsxDEV(DateText, {\n            children: `${card.date.startDate ? formatDate(card.date.startDate) : ''}${card.date.startDate ? card.date.dueDate ? ' - ' : '' : ''}${card.date.dueDate ? formatDate(card.date.dueDate) : ''}${card.date.dueTime ? ' at ' + card.date.dueTime : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 8\n          }, this), moment(card.date.dueDate).toDate().getTime() < new Date().getTime() ? /*#__PURE__*/_jsxDEV(OverDueLabel, {\n            show: true,\n            children: \"overdue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(CompleteLabel, {\n            show: dateCheck,\n            children: \"complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n            style: {\n              marginBottom: '0.2rem'\n            },\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this), datePopover && /*#__PURE__*/_jsxDEV(BasePopover, {\n      anchorElement: datePopover,\n      closeCallback: () => {\n        setDatePopover(null);\n      },\n      title: \"Date\",\n      contents: /*#__PURE__*/_jsxDEV(DatePopover, {\n        closeCallback: () => {\n          setDatePopover(null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Features, \"+nSMXyRZwsETgV1tfyFab0/WB8U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Features;\nexport default Features;\n\nvar _c;\n\n$RefreshReg$(_c, \"Features\");","map":{"version":3,"sources":["C:/Users/Dell/trello-clone-mern/client/src/Components/Modals/EditCardModal/Features/Features.js"],"names":["React","useEffect","useState","useRef","Container","FeatureContainer","Title","RowContainer","Label","AddLabel","DateDropDown","DateText","CompleteLabel","OverDueLabel","MembersFeature","ArrowDownIcon","Checkbox","useDispatch","useSelector","BasePopover","LabelsPopover","moment","dateCompletedUpdate","DatePopover","Features","props","dispatch","card","state","ref","dateCheck","setDateCheck","date","completed","labelPopover","setLabelPopover","labelsBackArrow","setLabelsBackArrow","labelsTitle","setLabelsTitle","datePopover","setDatePopover","anySelectedLabel","labels","filter","label","selected","handleDateCompletedClick","param","cardId","listId","boardId","formatDate","toDate","getFullYear","Date","format","members","length","map","event","current","color","backColor","text","_id","currentTarget","startDate","dueDate","dueTime","getTime","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport {\r\n\tContainer,\r\n\tFeatureContainer,\r\n\tTitle,\r\n\tRowContainer,\r\n\tLabel,\r\n\tAddLabel,\r\n\tDateDropDown,\r\n\tDateText,\r\n\tCompleteLabel,\r\n\tOverDueLabel,\r\n} from './styled';\r\nimport MembersFeature from './MembersFeature';\r\nimport ArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport Checkbox from '../ReUsableComponents/Checkbox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport BasePopover from '../ReUsableComponents/BasePopover';\r\nimport LabelsPopover from '../Popovers/Labels/LabelsPopover';\r\nimport moment from 'moment';\r\nimport { dateCompletedUpdate } from '../../../../Services/cardService';\r\nimport DatePopover from '../Popovers/Date/DatePopover';\r\n\r\nconst Features = (props) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst card = useSelector((state) => state.card);\r\n\tconst ref = useRef();\r\n\tconst [dateCheck, setDateCheck] = useState(card.date.completed);\r\n\tconst [labelPopover, setLabelPopover] = React.useState(null);\r\n\tconst [labelsBackArrow, setLabelsBackArrow] = React.useState(false);\r\n\tconst [labelsTitle, setLabelsTitle] = React.useState('Labels');\r\n\tconst [datePopover, setDatePopover] = React.useState(null);\t\r\n\tuseEffect(() => {\r\n\t\tsetDateCheck(card.date.completed);\r\n\t}, [card.date.completed]);\r\n\r\n\tconst anySelectedLabel = () => {\r\n\t\treturn card.labels.filter((label) => label.selected);\r\n\t};\r\n\r\n\tconst handleDateCompletedClick = async (param) => {\r\n\t\tsetDateCheck(param);\r\n\t\tawait dateCompletedUpdate(card.cardId, card.listId, card.boardId, param, dispatch);\r\n\t};\r\n\r\n\tconst formatDate = (date) => {\r\n\t\tif (moment(date).toDate().getFullYear() < new Date().getFullYear()) return moment(date).format('MMM DD, yyyy');\r\n\t\telse return moment(date).format('MMM DD');\r\n\t};\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{card.members.length > 0 && (\r\n\t\t\t\t<FeatureContainer>\r\n\t\t\t\t\t<MembersFeature />\r\n\t\t\t\t</FeatureContainer>\r\n\t\t\t)}\r\n\t\t\t{anySelectedLabel().length > 0 && (\r\n\t\t\t\t<FeatureContainer>\r\n\t\t\t\t\t<Title ref={ref}>Labels</Title>\r\n\t\t\t\t\t<RowContainer >\r\n\t\t\t\t\t\t{anySelectedLabel().map((label) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tsetLabelPopover(ref.current)}}\r\n\t\t\t\t\t\t\t\t\tkey={label._id}\r\n\t\t\t\t\t\t\t\t\tcolor={label.color}\r\n\t\t\t\t\t\t\t\t\thoverColor={label.backColor}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{label.text}\r\n\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t<AddLabel  onClick={(event) => setLabelPopover(event.currentTarget)}>+</AddLabel>\r\n\t\t\t\t\t\t{labelPopover && (\r\n\t\t\t\t\t\t\t<BasePopover \r\n\t\t\t\t\t\t\t\tanchorElement={labelPopover}\r\n\t\t\t\t\t\t\t\tcloseCallback={() => {\r\n\t\t\t\t\t\t\t\t\tsetLabelPopover(null);\r\n\t\t\t\t\t\t\t\t\tsetLabelsTitle('Labels');\r\n\t\t\t\t\t\t\t\t\tsetLabelsBackArrow(false);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\ttitle={labelsTitle}\r\n\t\t\t\t\t\t\t\tbackClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetLabelsTitle('Labels');\r\n\t\t\t\t\t\t\t\t\tsetLabelsBackArrow(false);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tbackArrow={labelsBackArrow}\r\n\t\t\t\t\t\t\t\tcontents={\r\n\t\t\t\t\t\t\t\t\t<LabelsPopover\r\n\t\t\t\t\t\t\t\t\t\tcurrentPage={labelsTitle}\r\n\t\t\t\t\t\t\t\t\t\ttitleCallback={(event) => setLabelsTitle(event)}\r\n\t\t\t\t\t\t\t\t\t\tarrowCallback={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetLabelsBackArrow(event);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</RowContainer>\r\n\t\t\t\t</FeatureContainer>\r\n\t\t\t)}\r\n\t\t\t{(card.date.startDate || card.date.dueDate) && (\r\n\t\t\t\t<FeatureContainer>\r\n\t\t\t\t\t<Title>{card.date.startDate ? (card.date.dueDate ? 'Dates' : 'Start date') : 'Due date'}</Title>\r\n\t\t\t\t\t<RowContainer>\r\n\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\tchecked={dateCheck}\r\n\t\t\t\t\t\t\tclickCallback={handleDateCompletedClick}\r\n\t\t\t\t\t\t\thidden={!card.date.dueDate ? true : false}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<DateDropDown onClick={(event) => setDatePopover(event.currentTarget)}>\r\n\t\t\t\t\t\t\t<DateText>{`${card.date.startDate ? formatDate(card.date.startDate) : ''}${\r\n\t\t\t\t\t\t\t\tcard.date.startDate ? (card.date.dueDate ? ' - ' : '') : ''\r\n\t\t\t\t\t\t\t}${card.date.dueDate ? formatDate(card.date.dueDate) : ''}${\r\n\t\t\t\t\t\t\t\tcard.date.dueTime ? ' at ' + card.date.dueTime : ''\r\n\t\t\t\t\t\t\t}`}</DateText>\r\n\t\t\t\t\t\t\t{moment(card.date.dueDate).toDate().getTime() < new Date().getTime() ? (\r\n\t\t\t\t\t\t\t\t<OverDueLabel show={true}>overdue</OverDueLabel>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<CompleteLabel show={dateCheck}>complete</CompleteLabel>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<ArrowDownIcon style={{ marginBottom: '0.2rem' }} fontSize='small' />\r\n\t\t\t\t\t\t</DateDropDown>\r\n\t\t\t\t\t</RowContainer>\r\n\t\t\t\t</FeatureContainer>\r\n\t\t\t)}\r\n\t\t\t{datePopover && (\r\n\t\t\t\t<BasePopover\r\n\t\t\t\t\tanchorElement={datePopover}\r\n\t\t\t\t\tcloseCallback={() => {\r\n\t\t\t\t\t\tsetDatePopover(null);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttitle='Date'\r\n\t\t\t\t\tcontents={\r\n\t\t\t\t\t\t<DatePopover\r\n\t\t\t\t\t\t\tcloseCallback={() => {\r\n\t\t\t\t\t\t\t\tsetDatePopover(null);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Features;\r\n"]},"metadata":{},"sourceType":"module"}