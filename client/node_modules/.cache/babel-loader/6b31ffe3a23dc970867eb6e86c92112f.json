{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\trello-clone-mern\\\\client\\\\src\\\\Components\\\\Modals\\\\EditCardModal\\\\Popovers\\\\Attachment\\\\AddAttachmentPopover.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { SearchArea, Title } from '../Labels/styled';\nimport Button from '../../ReUsableComponents/Button';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { attachmentAdd } from '../../../../../Services/cardService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-start;\n\tjustify-content: center;\n\theight: fit-content;\n\twidth: 100%;\n\tpadding-bottom: 0.5rem;\n\tgap: 0.2rem;\n`;\n_c = Container;\n\nconst AddAttachmentPopover = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const card = useSelector(state => state.card);\n  const [link, setLink] = useState('');\n  const [linkName, setLinkName] = useState('');\n\n  const handleAttachClick = async () => {\n    setLink('');\n    setLinkName('');\n    await attachmentAdd(card.cardId, card.listId, card.boardId, new RegExp(/^https?:\\/\\//).test(link) ? link : 'http://' + link, linkName, dispatch);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Attach a link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SearchArea, {\n      placeholder: \"Paste any link here...\",\n      value: link,\n      onChange: e => setLink(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), link && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        style: {\n          marginTop: '0.7rem'\n        },\n        children: \"Link name (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(SearchArea, {\n        value: linkName,\n        onChange: e => setLinkName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginTop: '1rem'\n      },\n      title: \"Attach\",\n      clickCallback: handleAttachClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AddAttachmentPopover, \"wkya/nvNriJCPb0cCe8JbwwSF1E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = AddAttachmentPopover;\nexport default AddAttachmentPopover;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"AddAttachmentPopover\");","map":{"version":3,"sources":["C:/Users/Dell/trello-clone-mern/client/src/Components/Modals/EditCardModal/Popovers/Attachment/AddAttachmentPopover.js"],"names":["React","useState","SearchArea","Title","Button","styled","useDispatch","useSelector","attachmentAdd","Container","div","AddAttachmentPopover","props","dispatch","card","state","link","setLink","linkName","setLinkName","handleAttachClick","cardId","listId","boardId","RegExp","test","e","target","value","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,kBAAlC;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,qCAA9B;;;AACA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMD,S;;AAWN,MAAME,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AACvC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,IAAI,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMmB,iBAAiB,GAAG,YAAY;AACrCH,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACA,UAAMX,aAAa,CAClBM,IAAI,CAACO,MADa,EAElBP,IAAI,CAACQ,MAFa,EAGlBR,IAAI,CAACS,OAHa,EAIlB,IAAIC,MAAJ,CAAW,cAAX,EAA2BC,IAA3B,CAAgCT,IAAhC,IAAwCA,IAAxC,GAA+C,YAAYA,IAJzC,EAKlBE,QALkB,EAMlBL,QANkB,CAAnB;AASA,GAZD;;AAaA,sBACC,QAAC,SAAD;AAAA,4BACC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,UAAD;AAAY,MAAA,WAAW,EAAC,wBAAxB;AAAiD,MAAA,KAAK,EAAEG,IAAxD;AAA8D,MAAA,QAAQ,EAAGU,CAAD,IAAOT,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtF;AAAA;AAAA;AAAA;AAAA,YAFD,EAGEZ,IAAI,iBACJ;AAAA,8BACC,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAEa,UAAAA,SAAS,EAAE;AAAb,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEX,QAAnB;AAA6B,QAAA,QAAQ,EAAGQ,CAAD,IAAOP,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAAzD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA,oBAJF,eASC,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAf;AAAsC,MAAA,KAAK,EAAC,QAA5C;AAAqD,MAAA,aAAa,EAAET;AAApE;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAaA,CA/BD;;GAAMT,oB;UACYL,W,EACJC,W;;;MAFRI,oB;AAiCN,eAAeA,oBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { SearchArea, Title } from '../Labels/styled';\r\nimport Button from '../../ReUsableComponents/Button';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { attachmentAdd } from '../../../../../Services/cardService';\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: flex-start;\r\n\tjustify-content: center;\r\n\theight: fit-content;\r\n\twidth: 100%;\r\n\tpadding-bottom: 0.5rem;\r\n\tgap: 0.2rem;\r\n`;\r\n\r\nconst AddAttachmentPopover = (props) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst card = useSelector((state) => state.card);\r\n\tconst [link, setLink] = useState('');\r\n\tconst [linkName, setLinkName] = useState('');\r\n\tconst handleAttachClick = async () => {\r\n\t\tsetLink('');\r\n\t\tsetLinkName('');\r\n\t\tawait attachmentAdd(\r\n\t\t\tcard.cardId,\r\n\t\t\tcard.listId,\r\n\t\t\tcard.boardId,\r\n\t\t\tnew RegExp(/^https?:\\/\\//).test(link) ? link : 'http://' + link,\r\n\t\t\tlinkName,\r\n\t\t\tdispatch\r\n\t\t);\r\n\t\t\r\n\t};\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Title>Attach a link</Title>\r\n\t\t\t<SearchArea placeholder='Paste any link here...' value={link} onChange={(e) => setLink(e.target.value)} />\r\n\t\t\t{link && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Title style={{ marginTop: '0.7rem' }}>Link name (optional)</Title>\r\n\t\t\t\t\t<SearchArea value={linkName} onChange={(e) => setLinkName(e.target.value)} />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t<Button style={{ marginTop: '1rem' }} title='Attach' clickCallback={handleAttachClick} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default AddAttachmentPopover;\r\n"]},"metadata":{},"sourceType":"module"}