{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\trello-clone-mern\\\\client\\\\src\\\\Components\\\\Modals\\\\EditCardModal\\\\Popovers\\\\InviteMembers\\\\InviteMembers.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, SearchContainer, SearchBar, ChipContainer } from './styled';\nimport Button from '../../ReUsableComponents/Button';\nimport Avatar from '@mui/material/Avatar';\nimport Chip from '@mui/material/Chip';\nimport { makeStyles } from '@mui/styles';\nimport Tooltip from '@mui/material/Tooltip';\nimport Zoom from '@mui/material/Zoom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserFromEmail } from '../../../../../Services/userService';\nimport { openAlert } from '../../../../../Redux/Slices/alertSlice';\nimport { boardMemberAdd } from '../../../../../Services/boardService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: '8rem',\n    opacity: '70%'\n  }\n});\n\nconst ChipComponent = props => {\n  _s();\n\n  const {\n    name,\n    surname,\n    email,\n    callback\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    TransitionComponent: Zoom,\n    title: `${name} ${surname}`,\n    size: \"small\",\n    placement: \"top\",\n    arrow: true,\n    children: /*#__PURE__*/_jsxDEV(Chip, {\n      className: classes.root,\n      onDelete: () => callback(email),\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        children: name.toString()[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this),\n      label: name,\n      size: \"small\",\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ChipComponent, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChipComponent;\n\nconst InviteMembers = () => {\n  _s2();\n\n  const [memberMail, setMemberMail] = useState('');\n  const [members, setMembers] = useState([]);\n  const dispatch = useDispatch();\n  const boardMembers = useSelector(state => state.board.members);\n  const boardId = useSelector(state => state.board.id);\n\n  const handleAddClick = async () => {\n    const checkMember = boardMembers.filter(m => m.email === memberMail)[0];\n\n    if (checkMember) {\n      dispatch(openAlert({\n        message: `${checkMember.name} is already member of this board!`,\n        severity: 'error'\n      }));\n      setMemberMail('');\n      return;\n    }\n\n    const result = await getUserFromEmail(memberMail, dispatch);\n    if (!result) return;\n    setMembers(prev => [...prev, result]);\n    setMemberMail('');\n  };\n\n  const handleDelete = email => {\n    const newMembers = members.filter(member => member.email !== email);\n    setMembers([...newMembers]);\n  };\n\n  const handleInviteClick = async () => {\n    await boardMemberAdd(boardId, members, dispatch);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SearchContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        type: \"email\",\n        placeholder: \"Member's Email\",\n        value: memberMail,\n        onChange: e => {\n          setMemberMail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Add\",\n        style: {\n          flex: '1'\n        },\n        clickCallback: handleAddClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ChipContainer, {\n      children: members.map(member => {\n        return /*#__PURE__*/_jsxDEV(ChipComponent, {\n          callback: handleDelete,\n          ...member\n        }, member.email, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this), members.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n      clickCallback: handleInviteClick,\n      title: \"Invite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(InviteMembers, \"ltU4yVcOPbXPjQYMTv33BjYGHUs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c2 = InviteMembers;\nexport default InviteMembers;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChipComponent\");\n$RefreshReg$(_c2, \"InviteMembers\");","map":{"version":3,"sources":["C:/Users/Dell/trello-clone-mern/client/src/Components/Modals/EditCardModal/Popovers/InviteMembers/InviteMembers.js"],"names":["React","useState","Container","SearchContainer","SearchBar","ChipContainer","Button","Avatar","Chip","makeStyles","Tooltip","Zoom","useDispatch","useSelector","getUserFromEmail","openAlert","boardMemberAdd","useStyles","root","maxWidth","opacity","ChipComponent","props","name","surname","email","callback","classes","toString","InviteMembers","memberMail","setMemberMail","members","setMembers","dispatch","boardMembers","state","board","boardId","id","handleAddClick","checkMember","filter","m","message","severity","result","prev","handleDelete","newMembers","member","handleInviteClick","e","target","value","flex","map","length"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,eAApB,EAAqCC,SAArC,EAAgDC,aAAhD,QAAqE,UAArE;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,QAAiC,qCAAjC;AACA,SAASC,SAAT,QAA0B,wCAA1B;AACA,SAASC,cAAT,QAA+B,sCAA/B;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AAC5BS,EAAAA,IAAI,EAAE;AACLC,IAAAA,QAAQ,EAAE,MADL;AAELC,IAAAA,OAAO,EAAE;AAFJ;AADsB,CAAD,CAA5B;;AAOA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,MAAqCJ,KAA3C;AACA,QAAMK,OAAO,GAAGV,SAAS,EAAzB;AACA,sBACC,QAAC,OAAD;AAAS,IAAA,mBAAmB,EAAEN,IAA9B;AAAoC,IAAA,KAAK,EAAG,GAAEY,IAAK,IAAGC,OAAQ,EAA9D;AAAiE,IAAA,IAAI,EAAC,OAAtE;AAA8E,IAAA,SAAS,EAAC,KAAxF;AAA8F,IAAA,KAAK,MAAnG;AAAA,2BACC,QAAC,IAAD;AACC,MAAA,SAAS,EAAEG,OAAO,CAACT,IADpB;AAEC,MAAA,QAAQ,EAAE,MAAMQ,QAAQ,CAACD,KAAD,CAFzB;AAGC,MAAA,MAAM,eAAE,QAAC,MAAD;AAAA,kBAASF,IAAI,CAACK,QAAL,GAAgB,CAAhB;AAAT;AAAA;AAAA;AAAA;AAAA,cAHT;AAIC,MAAA,KAAK,EAAEL,IAJR;AAKC,MAAA,IAAI,EAAC,OALN;AAMC,MAAA,KAAK,EAAC;AANP;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAYA,CAfD;;GAAMF,a;UAEWJ,S;;;KAFXI,a;;AAiBN,MAAMQ,aAAa,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B9B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC+B,OAAD,EAAUC,UAAV,IAAwBhC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMiC,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,YAAY,GAAGtB,WAAW,CAAEuB,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYL,OAAxB,CAAhC;AACA,QAAMM,OAAO,GAAGzB,WAAW,CAACuB,KAAK,IAAEA,KAAK,CAACC,KAAN,CAAYE,EAApB,CAA3B;;AACA,QAAMC,cAAc,GAAG,YAAY;AAClC,UAAMC,WAAW,GAAGN,YAAY,CAACO,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAAClB,KAAF,KAAYK,UAAvC,EAAmD,CAAnD,CAApB;;AACA,QAAIW,WAAJ,EAAiB;AAChBP,MAAAA,QAAQ,CACPnB,SAAS,CAAC;AACT6B,QAAAA,OAAO,EAAG,GAAEH,WAAW,CAAClB,IAAK,mCADpB;AAETsB,QAAAA,QAAQ,EAAE;AAFD,OAAD,CADF,CAAR;AAMAd,MAAAA,aAAa,CAAC,EAAD,CAAb;AACA;AACA;;AAED,UAAMe,MAAM,GAAG,MAAMhC,gBAAgB,CAACgB,UAAD,EAAaI,QAAb,CAArC;AACA,QAAI,CAACY,MAAL,EAAa;AACbb,IAAAA,UAAU,CAAEc,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUD,MAAV,CAAX,CAAV;AACAf,IAAAA,aAAa,CAAC,EAAD,CAAb;AACA,GAjBD;;AAkBA,QAAMiB,YAAY,GAAIvB,KAAD,IAAW;AAC/B,UAAMwB,UAAU,GAAGjB,OAAO,CAACU,MAAR,CAAgBQ,MAAD,IAAYA,MAAM,CAACzB,KAAP,KAAiBA,KAA5C,CAAnB;AACAQ,IAAAA,UAAU,CAAC,CAAC,GAAGgB,UAAJ,CAAD,CAAV;AACA,GAHD;;AAKA,QAAME,iBAAiB,GAAE,YAAS;AACjC,UAAMnC,cAAc,CAACsB,OAAD,EAASN,OAAT,EAAiBE,QAAjB,CAApB;AACA,GAFD;;AAIA,sBACC,QAAC,SAAD;AAAA,4BACC,QAAC,eAAD;AAAA,8BACC,QAAC,SAAD;AACC,QAAA,IAAI,EAAC,OADN;AAEC,QAAA,WAAW,EAAC,gBAFb;AAGC,QAAA,KAAK,EAAEJ,UAHR;AAIC,QAAA,QAAQ,EAAGsB,CAAD,IAAO;AAChBrB,UAAAA,aAAa,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACA;AANF;AAAA;AAAA;AAAA;AAAA,cADD,eASC,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAoB,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAA3B;AAA0C,QAAA,aAAa,EAAEf;AAAzD;AAAA;AAAA;AAAA;AAAA,cATD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAYC,QAAC,aAAD;AAAA,gBACER,OAAO,CAACwB,GAAR,CAAaN,MAAD,IAAY;AACxB,4BAAO,QAAC,aAAD;AAAkC,UAAA,QAAQ,EAAEF,YAA5C;AAAA,aAA8DE;AAA9D,WAAoBA,MAAM,CAACzB,KAA3B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,OAFA;AADF;AAAA;AAAA;AAAA;AAAA,YAZD,EAiBEO,OAAO,CAACyB,MAAR,GAAiB,CAAjB,iBAAsB,QAAC,MAAD;AAAQ,MAAA,aAAa,EAAEN,iBAAvB;AAA0C,MAAA,KAAK,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,YAjBxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAqBA,CAtDD;;IAAMtB,a;UAGYjB,W,EACIC,W,EACLA,W;;;MALXgB,a;AAwDN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, SearchContainer, SearchBar, ChipContainer } from './styled';\r\nimport Button from '../../ReUsableComponents/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Chip from '@mui/material/Chip';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserFromEmail } from '../../../../../Services/userService';\r\nimport { openAlert } from '../../../../../Redux/Slices/alertSlice';\r\nimport { boardMemberAdd } from '../../../../../Services/boardService';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tmaxWidth: '8rem',\r\n\t\topacity: '70%',\r\n\t},\r\n});\r\n\r\nconst ChipComponent = (props) => {\r\n\tconst { name, surname, email, callback } = props;\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Tooltip TransitionComponent={Zoom} title={`${name} ${surname}`} size='small' placement='top' arrow>\r\n\t\t\t<Chip\r\n\t\t\t\tclassName={classes.root}\r\n\t\t\t\tonDelete={() => callback(email)}\r\n\t\t\t\tavatar={<Avatar>{name.toString()[0]}</Avatar>}\r\n\t\t\t\tlabel={name}\r\n\t\t\t\tsize='small'\r\n\t\t\t\tcolor='secondary'\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n};\r\n\r\nconst InviteMembers = () => {\r\n\tconst [memberMail, setMemberMail] = useState('');\r\n\tconst [members, setMembers] = useState([]);\r\n\tconst dispatch = useDispatch();\r\n\tconst boardMembers = useSelector((state) => state.board.members);\r\n\tconst boardId = useSelector(state=>state.board.id);\r\n\tconst handleAddClick = async () => {\r\n\t\tconst checkMember = boardMembers.filter((m) => m.email === memberMail)[0];\r\n\t\tif (checkMember) {\r\n\t\t\tdispatch(\r\n\t\t\t\topenAlert({\r\n\t\t\t\t\tmessage: `${checkMember.name} is already member of this board!`,\r\n\t\t\t\t\tseverity: 'error',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tsetMemberMail('');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst result = await getUserFromEmail(memberMail, dispatch);\r\n\t\tif (!result) return;\r\n\t\tsetMembers((prev) => [...prev, result]);\r\n\t\tsetMemberMail('');\r\n\t};\r\n\tconst handleDelete = (email) => {\r\n\t\tconst newMembers = members.filter((member) => member.email !== email);\r\n\t\tsetMembers([...newMembers]);\r\n\t};\r\n\r\n\tconst handleInviteClick= async()=>{\r\n\t\tawait boardMemberAdd(boardId,members,dispatch);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<SearchContainer>\r\n\t\t\t\t<SearchBar\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tplaceholder=\"Member's Email\"\r\n\t\t\t\t\tvalue={memberMail}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetMemberMail(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button title='Add' style={{ flex: '1' }} clickCallback={handleAddClick} />\r\n\t\t\t</SearchContainer>\r\n\t\t\t<ChipContainer>\r\n\t\t\t\t{members.map((member) => {\r\n\t\t\t\t\treturn <ChipComponent key={member.email} callback={handleDelete} {...member} />;\r\n\t\t\t\t})}\r\n\t\t\t</ChipContainer>\r\n\t\t\t{members.length > 0 && <Button clickCallback={handleInviteClick} title='Invite' />}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default InviteMembers;\r\n"]},"metadata":{},"sourceType":"module"}