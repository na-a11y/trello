{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\trello-clone-mern\\\\client\\\\src\\\\Components\\\\Modals\\\\EditCardModal\\\\Description\\\\Description.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Container, RightContainer, Title, DescriptionInput, DescriptionText } from './styled';\nimport DescriptionIcon from '@mui/icons-material/TextSnippetOutlined';\nimport BottomButtonGroup from '../../../Pages/BoardPage/BoardComponents/BottomButtonGroup/BottomButtonGroup.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { descriptionUpdate } from '../../../../Services/cardService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Description = () => {\n  _s();\n\n  const thisCard = useSelector(state => state.card);\n  const dispatch = useDispatch();\n  const [inputFocus, setInputFocus] = useState(false);\n  const [description, setDescription] = useState(thisCard.description);\n  const ref = useRef();\n  const ref2 = useRef();\n\n  const handleSaveClick = async () => {\n    setInputFocus(false);\n    await descriptionUpdate(thisCard.cardId, thisCard.listId, thisCard.boardId, description, dispatch);\n  };\n\n  useEffect(() => {\n    setDescription(thisCard.description);\n  }, [thisCard.description]);\n  useEffect(() => {\n    if (inputFocus) {\n      ref.current.focus();\n    }\n  }, [inputFocus]);\n\n  const handleClickOutside = event => {\n    if (ref2.current && !ref2.current.contains(event.target)) {\n      setInputFocus(false);\n      setDescription(thisCard.description);\n    } else {\n      setInputFocus(true);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true);\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ref: ref2,\n    children: [/*#__PURE__*/_jsxDEV(DescriptionIcon, {\n      fontSize: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(RightContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), description && !inputFocus ? /*#__PURE__*/_jsxDEV(DescriptionText, {\n        onClick: () => setInputFocus(true),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(DescriptionInput, {\n        ref: ref,\n        minHeight: inputFocus ? '5.5rem' : '2.5rem',\n        placeholder: \"Add a more detailed description...\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: inputFocus ? 'block' : 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(BottomButtonGroup, {\n          closeCallback: () => {\n            setInputFocus(false);\n            setDescription(thisCard.description);\n          },\n          clickCallback: handleSaveClick,\n          title: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Description, \"tSzBcObIy8qpyUqOboJLzE5rh6A=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Description;\nexport default Description;\n\nvar _c;\n\n$RefreshReg$(_c, \"Description\");","map":{"version":3,"sources":["C:/Users/Dell/trello-clone-mern/client/src/Components/Modals/EditCardModal/Description/Description.js"],"names":["React","useEffect","useRef","useState","Container","RightContainer","Title","DescriptionInput","DescriptionText","DescriptionIcon","BottomButtonGroup","useDispatch","useSelector","descriptionUpdate","Description","thisCard","state","card","dispatch","inputFocus","setInputFocus","description","setDescription","ref","ref2","handleSaveClick","cardId","listId","boardId","current","focus","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","e","value","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,KAApC,EAA2CC,gBAA3C,EAA6DC,eAA7D,QAAoF,UAApF;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,iBAAP,MAA8B,iFAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,kCAAlC;;;AACA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACzB,QAAMC,QAAQ,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA5B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAACY,QAAQ,CAACM,WAAV,CAA9C;AACA,QAAME,GAAG,GAAGrB,MAAM,EAAlB;AACA,QAAMsB,IAAI,GAAGtB,MAAM,EAAnB;;AAEA,QAAMuB,eAAe,GAAG,YAAY;AACnCL,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,UAAMP,iBAAiB,CAACE,QAAQ,CAACW,MAAV,EAAkBX,QAAQ,CAACY,MAA3B,EAAmCZ,QAAQ,CAACa,OAA5C,EAAqDP,WAArD,EAAkEH,QAAlE,CAAvB;AACA,GAHD;;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACfqB,IAAAA,cAAc,CAACP,QAAQ,CAACM,WAAV,CAAd;AACA,GAFQ,EAEN,CAACN,QAAQ,CAACM,WAAV,CAFM,CAAT;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIkB,UAAJ,EAAgB;AACfI,MAAAA,GAAG,CAACM,OAAJ,CAAYC,KAAZ;AACA;AACD,GAJQ,EAIN,CAACX,UAAD,CAJM,CAAT;;AAMA,QAAMY,kBAAkB,GAAIC,KAAD,IAAW;AACrC,QAAIR,IAAI,CAACK,OAAL,IAAgB,CAACL,IAAI,CAACK,OAAL,CAAaI,QAAb,CAAsBD,KAAK,CAACE,MAA5B,CAArB,EAA0D;AACzDd,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,MAAAA,cAAc,CAACP,QAAQ,CAACM,WAAV,CAAd;AACA,KAHD,MAGO;AACND,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA;AACD,GAPD;;AASAnB,EAAAA,SAAS,CAAC,MAAM;AACfkC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCL,kBAAnC,EAAuD,IAAvD;AACA,WAAO,MAAM;AACZI,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCN,kBAAtC,EAA0D,IAA1D;AACA,KAFD;AAGA,GALQ,CAAT;AAOA,sBACC,QAAC,SAAD;AAAW,IAAA,GAAG,EAAEP,IAAhB;AAAA,4BACC,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,cAAD;AAAA,8BACC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEEH,WAAW,IAAI,CAACF,UAAhB,gBACA,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,IAAD,CAA7C;AAAA,kBAAsDC;AAAtD;AAAA;AAAA;AAAA;AAAA,cADA,gBAGA,QAAC,gBAAD;AACC,QAAA,GAAG,EAAEE,GADN;AAEC,QAAA,SAAS,EAAEJ,UAAU,GAAG,QAAH,GAAc,QAFpC;AAGC,QAAA,WAAW,EAAC,oCAHb;AAIC,QAAA,KAAK,EAAEE,WAJR;AAKC,QAAA,QAAQ,EAAGiB,CAAD,IAAOhB,cAAc,CAACgB,CAAC,CAACJ,MAAF,CAASK,KAAV;AALhC;AAAA;AAAA;AAAA;AAAA,cALF,eAaC;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAErB,UAAU,GAAG,OAAH,GAAa;AAAlC,SAAZ;AAAA,+BACC,QAAC,iBAAD;AACC,UAAA,aAAa,EAAE,MAAM;AACpBC,YAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,YAAAA,cAAc,CAACP,QAAQ,CAACM,WAAV,CAAd;AACA,WAJF;AAKC,UAAA,aAAa,EAAEI,eALhB;AAMC,UAAA,KAAK,EAAC;AANP;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAbD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA6BA,CApED;;GAAMX,W;UACYF,W,EACAD,W;;;KAFZG,W;AAsEN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Container, RightContainer, Title, DescriptionInput, DescriptionText } from './styled';\r\nimport DescriptionIcon from '@mui/icons-material/TextSnippetOutlined';\r\nimport BottomButtonGroup from '../../../Pages/BoardPage/BoardComponents/BottomButtonGroup/BottomButtonGroup.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { descriptionUpdate } from '../../../../Services/cardService';\r\nconst Description = () => {\r\n\tconst thisCard = useSelector((state) => state.card);\r\n\tconst dispatch = useDispatch();\r\n\tconst [inputFocus, setInputFocus] = useState(false);\r\n\tconst [description, setDescription] = useState(thisCard.description);\r\n\tconst ref = useRef();\r\n\tconst ref2 = useRef();\r\n\r\n\tconst handleSaveClick = async () => {\r\n\t\tsetInputFocus(false);\r\n\t\tawait descriptionUpdate(thisCard.cardId, thisCard.listId, thisCard.boardId, description, dispatch);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetDescription(thisCard.description);\r\n\t}, [thisCard.description]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (inputFocus) {\r\n\t\t\tref.current.focus();\r\n\t\t}\r\n\t}, [inputFocus]);\r\n\r\n\tconst handleClickOutside = (event) => {\r\n\t\tif (ref2.current && !ref2.current.contains(event.target)) {\r\n\t\t\tsetInputFocus(false);\r\n\t\t\tsetDescription(thisCard.description);\r\n\t\t} else {\r\n\t\t\tsetInputFocus(true);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener('click', handleClickOutside, true);\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener('click', handleClickOutside, true);\r\n\t\t};\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Container ref={ref2}>\r\n\t\t\t<DescriptionIcon fontSize='small' />\r\n\t\t\t<RightContainer>\r\n\t\t\t\t<Title>Description</Title>\r\n\t\t\t\t{description && !inputFocus ? (\r\n\t\t\t\t\t<DescriptionText onClick={() => setInputFocus(true)}>{description}</DescriptionText>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<DescriptionInput\r\n\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\tminHeight={inputFocus ? '5.5rem' : '2.5rem'}\r\n\t\t\t\t\t\tplaceholder='Add a more detailed description...'\r\n\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<div style={{ display: inputFocus ? 'block' : 'none' }}>\r\n\t\t\t\t\t<BottomButtonGroup\r\n\t\t\t\t\t\tcloseCallback={() => {\r\n\t\t\t\t\t\t\tsetInputFocus(false);\r\n\t\t\t\t\t\t\tsetDescription(thisCard.description);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclickCallback={handleSaveClick}\r\n\t\t\t\t\t\ttitle='Save'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</RightContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Description;\r\n"]},"metadata":{},"sourceType":"module"}