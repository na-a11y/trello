{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\trello-clone-mern\\\\client\\\\src\\\\Components\\\\Modals\\\\EditCardModal\\\\Popovers\\\\Labels\\\\LabelsPopover.js\",\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '../../ReUsableComponents/Button';\nimport DoneIcon from '@mui/icons-material/Done';\nimport EditIcon from '@mui/icons-material/EditOutlined';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, SearchArea, Title, Row, Colorbox, ColorText, IconWrapper, SmallColorsContainer, SmallColorBox, BlueButton, ButtonContainer, RedButton } from './styled';\nimport { labelCreate, labelDelete, labelUpdate, labelUpdateSelection } from '../../../../../Services/cardService';\nimport { openAlert } from '../../../../../Redux/Slices/alertSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LabelsPopover = props => {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const {\n    currentPage\n  } = props;\n  const dispatch = useDispatch();\n  const thisCard = useSelector(state => state.card);\n  const [selectedCard, setSelectedCard] = useState({\n    _id: '',\n    color: '',\n    text: '',\n    backColor: ''\n  });\n  const colors = thisCard.colors;\n\n  const handleCreateClick = async (text, color, backColor) => {\n    props.arrowCallback(false);\n    props.titleCallback('Labels');\n    await labelCreate(thisCard.cardId, thisCard.listId, thisCard.boardId, text, color, backColor, dispatch);\n  };\n\n  const handleSaveClick = async (labelId, text, color, backColor) => {\n    props.arrowCallback(false);\n    props.titleCallback('Labels');\n    await labelUpdate(thisCard.cardId, thisCard.listId, thisCard.boardId, labelId, {\n      text,\n      color,\n      backColor\n    }, dispatch);\n  };\n\n  const handleColorBoxClick = async (labelId, selected) => {\n    await labelUpdateSelection(thisCard.cardId, thisCard.listId, thisCard.boardId, labelId, selected, dispatch);\n  };\n\n  const handleDeleteClick = async labelId => {\n    props.arrowCallback(false);\n    props.titleCallback('Labels');\n    await labelDelete(thisCard.cardId, thisCard.listId, thisCard.boardId, labelId, dispatch);\n  };\n\n  const LabelComponent = props => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Colorbox, {\n        bg: props.color,\n        hbg: props.backColor,\n        onClick: () => {\n          handleColorBoxClick(props._id, !props.selected);\n        },\n        children: [/*#__PURE__*/_jsxDEV(ColorText, {\n          children: props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this), props.selected && /*#__PURE__*/_jsxDEV(DoneIcon, {\n          fontSize: \"1rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(IconWrapper, {\n        onClick: () => {\n          setSelectedCard({\n            _id: props._id,\n            color: props.color,\n            text: props.text,\n            backColor: props.backColor\n          });\n          props.arrowCallback(true);\n          props.titleCallback('Change');\n        },\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n          color: \"#091e42\",\n          fontSize: \"1rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this);\n  };\n\n  const mainPage = /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SearchArea, {\n      placeholder: \"Search labels...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \"Labels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, this), thisCard.labels.map(label => {\n      return /*#__PURE__*/_jsxDEV(LabelComponent, { ...label,\n        arrowCallback: props.arrowCallback,\n        titleCallback: props.titleCallback\n      }, label._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 6\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickCallback: () => {\n        props.arrowCallback(true);\n        props.titleCallback('Create');\n      },\n      title: \"Create a new label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n\n  const CreatePage = () => {\n    _s();\n\n    const [createText, setCreateText] = useState('');\n    const [createColor, setCreateColor] = useState('#0079bf');\n    const [createBackColor, setCreateBackColor] = useState('#055a8c');\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SearchArea, {\n        placeholder: \"Name...\",\n        value: createText,\n        onChange: e => setCreateText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Select a color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SmallColorsContainer, {\n        children: colors.map(color => {\n          return /*#__PURE__*/_jsxDEV(SmallColorBox, {\n            bg: color.bg,\n            hbg: color.hbg,\n            onClick: () => {\n              setCreateColor(color.bg);\n              setCreateBackColor(color.hbg);\n            },\n            children: color.bg === createColor && /*#__PURE__*/_jsxDEV(DoneIcon, {\n              fontSize: \"1rem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 38\n            }, this)\n          }, color.bg, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(BlueButton, {\n          onClick: () => {\n            if (createText && createColor && createBackColor) handleCreateClick(createText, createColor, createBackColor);else dispatch(openAlert({\n              severity: 'error',\n              message: 'Please fill all required areas!'\n            }));\n          },\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }, this);\n  };\n\n  _s(CreatePage, \"R1ufm5rFVdKXhuYgXQM3X+y+1rI=\");\n\n  const ChangePage = () => {\n    _s2();\n\n    const [changeText, setChangeText] = useState(selectedCard.text);\n    const [changeColor, setChangeColor] = useState(selectedCard.color);\n    const [changeBackColor, setChangeBackColor] = useState(selectedCard.backColor);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SearchArea, {\n        placeholder: \"Name...\",\n        value: changeText,\n        onChange: e => setChangeText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Select a color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SmallColorsContainer, {\n        children: colors.map(color => {\n          return /*#__PURE__*/_jsxDEV(SmallColorBox, {\n            bg: color.bg,\n            hbg: color.hbg,\n            onClick: () => {\n              setChangeColor(color.bg);\n              setChangeBackColor(color.hbg);\n            },\n            children: changeColor === color.bg && /*#__PURE__*/_jsxDEV(DoneIcon, {\n              fontSize: \"1rem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 38\n            }, this)\n          }, color.bg, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(BlueButton, {\n          onClick: () => {\n            if (changeText && changeColor && changeBackColor) handleSaveClick(selectedCard._id, changeText, changeColor, changeBackColor);else dispatch(openAlert({\n              severity: 'error',\n              message: 'Please fill all required areas!'\n            }));\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(RedButton, {\n          onClick: () => handleDeleteClick(selectedCard._id),\n          children: \" Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 4\n    }, this);\n  };\n\n  _s2(ChangePage, \"++phQDhjK/U5MZEpv0lqO5uqQiM=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentPage === 'Labels' ? mainPage : currentPage === 'Create' ? /*#__PURE__*/_jsxDEV(CreatePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 77\n    }, this) : /*#__PURE__*/_jsxDEV(ChangePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 94\n    }, this)\n  }, void 0, false);\n};\n\n_s3(LabelsPopover, \"HU2C9gnRfJbPjFBnn5eocmDQXYI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LabelsPopover;\nexport default LabelsPopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"LabelsPopover\");","map":{"version":3,"sources":["C:/Users/Dell/trello-clone-mern/client/src/Components/Modals/EditCardModal/Popovers/Labels/LabelsPopover.js"],"names":["React","useState","Button","DoneIcon","EditIcon","useDispatch","useSelector","Container","SearchArea","Title","Row","Colorbox","ColorText","IconWrapper","SmallColorsContainer","SmallColorBox","BlueButton","ButtonContainer","RedButton","labelCreate","labelDelete","labelUpdate","labelUpdateSelection","openAlert","LabelsPopover","props","currentPage","dispatch","thisCard","state","card","selectedCard","setSelectedCard","_id","color","text","backColor","colors","handleCreateClick","arrowCallback","titleCallback","cardId","listId","boardId","handleSaveClick","labelId","handleColorBoxClick","selected","handleDeleteClick","LabelComponent","mainPage","labels","map","label","CreatePage","createText","setCreateText","createColor","setCreateColor","createBackColor","setCreateBackColor","e","target","value","bg","hbg","severity","message","ChangePage","changeText","setChangeText","changeColor","setChangeColor","changeBackColor","setChangeBackColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '../../ReUsableComponents/Button';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n\tContainer,\r\n\tSearchArea,\r\n\tTitle,\r\n\tRow,\r\n\tColorbox,\r\n\tColorText,\r\n\tIconWrapper,\r\n\tSmallColorsContainer,\r\n\tSmallColorBox,\r\n\tBlueButton,\r\n\tButtonContainer,\r\n\tRedButton,\r\n} from './styled';\r\nimport { labelCreate, labelDelete, labelUpdate, labelUpdateSelection } from '../../../../../Services/cardService';\r\nimport { openAlert } from '../../../../../Redux/Slices/alertSlice';\r\n\r\nconst LabelsPopover = (props) => {\r\n\tconst { currentPage } = props;\r\n\tconst dispatch = useDispatch();\r\n\tconst thisCard = useSelector((state) => state.card);\r\n\tconst [selectedCard, setSelectedCard] = useState({ _id: '', color: '', text: '', backColor: '' });\r\n\tconst colors = thisCard.colors;\r\n\r\n\tconst handleCreateClick = async (text, color, backColor) => {\r\n\t\tprops.arrowCallback(false);\r\n\t\tprops.titleCallback('Labels');\r\n\t\tawait labelCreate(thisCard.cardId, thisCard.listId, thisCard.boardId, text, color, backColor, dispatch);\r\n\t\t\r\n\t};\r\n\r\n\tconst handleSaveClick = async (labelId, text, color, backColor) => {\r\n\t\tprops.arrowCallback(false);\r\n\t\tprops.titleCallback('Labels');\r\n\t\tawait labelUpdate(\r\n\t\t\tthisCard.cardId,\r\n\t\t\tthisCard.listId,\r\n\t\t\tthisCard.boardId,\r\n\t\t\tlabelId,\r\n\t\t\t{ text, color, backColor },\r\n\t\t\tdispatch\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleColorBoxClick = async (labelId, selected) => {\r\n\t\tawait labelUpdateSelection(thisCard.cardId, thisCard.listId, thisCard.boardId, labelId, selected, dispatch);\r\n\t};\r\n\r\n\tconst handleDeleteClick = async (labelId) => {\r\n\t\tprops.arrowCallback(false);\r\n\t\tprops.titleCallback('Labels');\r\n\t\tawait labelDelete(thisCard.cardId, thisCard.listId, thisCard.boardId, labelId, dispatch);\r\n\t};\r\n\r\n\tconst LabelComponent = (props) => {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Colorbox\r\n\t\t\t\t\tbg={props.color}\r\n\t\t\t\t\thbg={props.backColor}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\thandleColorBoxClick(props._id, !props.selected);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ColorText>{props.text}</ColorText>\r\n\t\t\t\t\t{props.selected && <DoneIcon fontSize='1rem' />}\r\n\t\t\t\t</Colorbox>\r\n\t\t\t\t<IconWrapper\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetSelectedCard({\r\n\t\t\t\t\t\t\t_id: props._id,\r\n\t\t\t\t\t\t\tcolor: props.color,\r\n\t\t\t\t\t\t\ttext: props.text,\r\n\t\t\t\t\t\t\tbackColor: props.backColor,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tprops.arrowCallback(true);\r\n\t\t\t\t\t\tprops.titleCallback('Change');\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<EditIcon color='#091e42' fontSize='1rem' />\r\n\t\t\t\t</IconWrapper>\r\n\t\t\t</Row>\r\n\t\t);\r\n\t};\r\n\r\n\tconst mainPage = (\r\n\t\t<Container>\r\n\t\t\t<SearchArea placeholder='Search labels...' />\r\n\t\t\t<Title>Labels</Title>\r\n\t\t\t{thisCard.labels.map((label) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<LabelComponent\r\n\t\t\t\t\t\tkey={label._id}\r\n\t\t\t\t\t\t{...label}\r\n\t\t\t\t\t\tarrowCallback={props.arrowCallback}\r\n\t\t\t\t\t\ttitleCallback={props.titleCallback}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\r\n\t\t\t<br />\r\n\t\t\t<Button\r\n\t\t\t\tclickCallback={() => {\r\n\t\t\t\t\tprops.arrowCallback(true);\r\n\t\t\t\t\tprops.titleCallback('Create');\r\n\t\t\t\t}}\r\n\t\t\t\ttitle='Create a new label'\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n\r\n\tconst CreatePage = () => {\r\n\t\tconst [createText, setCreateText] = useState('');\r\n\t\tconst [createColor, setCreateColor] = useState('#0079bf');\r\n\t\tconst [createBackColor, setCreateBackColor] = useState('#055a8c');\r\n\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Title>Name</Title>\r\n\t\t\t\t<SearchArea placeholder='Name...' value={createText} onChange={(e) => setCreateText(e.target.value)} />\r\n\t\t\t\t<Title>Select a color</Title>\r\n\t\t\t\t<SmallColorsContainer>\r\n\t\t\t\t\t{colors.map((color) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<SmallColorBox\r\n\t\t\t\t\t\t\t\tkey={color.bg}\r\n\t\t\t\t\t\t\t\tbg={color.bg}\r\n\t\t\t\t\t\t\t\thbg={color.hbg}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetCreateColor(color.bg);\r\n\t\t\t\t\t\t\t\t\tsetCreateBackColor(color.hbg);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{color.bg === createColor && <DoneIcon fontSize='1rem' />}\r\n\t\t\t\t\t\t\t</SmallColorBox>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</SmallColorsContainer>\r\n\t\t\t\t<ButtonContainer>\r\n\t\t\t\t\t<BlueButton\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tif (createText && createColor && createBackColor)\r\n\t\t\t\t\t\t\t\thandleCreateClick(createText, createColor, createBackColor);\r\n\t\t\t\t\t\t\telse dispatch(openAlert({ severity: 'error', message: 'Please fill all required areas!' }));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</BlueButton>\r\n\t\t\t\t</ButtonContainer>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t};\r\n\r\n\tconst ChangePage = () => {\r\n\t\tconst [changeText, setChangeText] = useState(selectedCard.text);\r\n\t\tconst [changeColor, setChangeColor] = useState(selectedCard.color);\r\n\t\tconst [changeBackColor, setChangeBackColor] = useState(selectedCard.backColor);\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Title>Name</Title>\r\n\t\t\t\t<SearchArea placeholder='Name...' value={changeText} onChange={(e) => setChangeText(e.target.value)} />\r\n\t\t\t\t<Title>Select a color</Title>\r\n\t\t\t\t<SmallColorsContainer>\r\n\t\t\t\t\t{colors.map((color) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<SmallColorBox\r\n\t\t\t\t\t\t\t\tkey={color.bg}\r\n\t\t\t\t\t\t\t\tbg={color.bg}\r\n\t\t\t\t\t\t\t\thbg={color.hbg}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetChangeColor(color.bg);\r\n\t\t\t\t\t\t\t\t\tsetChangeBackColor(color.hbg);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{changeColor === color.bg && <DoneIcon fontSize='1rem' />}\r\n\t\t\t\t\t\t\t</SmallColorBox>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</SmallColorsContainer>\r\n\t\t\t\t<ButtonContainer>\r\n\t\t\t\t\t<BlueButton\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tif (changeText && changeColor && changeBackColor)\r\n\t\t\t\t\t\t\t\thandleSaveClick(selectedCard._id, changeText, changeColor, changeBackColor);\r\n\t\t\t\t\t\t\telse dispatch(openAlert({ severity: 'error', message: 'Please fill all required areas!' }));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</BlueButton>\r\n\t\t\t\t\t<RedButton onClick={() => handleDeleteClick(selectedCard._id)}> Delete</RedButton>\r\n\t\t\t\t</ButtonContainer>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t};\r\n\r\n\treturn <>{currentPage === 'Labels' ? mainPage : currentPage === 'Create' ? <CreatePage /> : <ChangePage />}</>;\r\n};\r\n\r\nexport default LabelsPopover;\r\n"]},"metadata":{},"sourceType":"module"}