{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\trello-clone-mern\\\\client\\\\src\\\\Utils\\\\ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport LoadingScreen from \"../Components/LoadingScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  _s();\n\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  const history = useHistory();\n  const user = useSelector(state => state.user);\n  useEffect(() => {\n    if (!user.isAuthenticated && !user.pending) history.push(\"/\");\n  });\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (user.isAuthenticated && !user.pending) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 18\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 23\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProtectedRoute, \"9sNvQlWB9chR334vmwl5TA0aRZQ=\", false, function () {\n  return [useHistory, useSelector];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/Dell/trello-clone-mern/client/src/Utils/ProtectedRoute.js"],"names":["React","useEffect","useSelector","Route","useHistory","LoadingScreen","ProtectedRoute","component","Component","rest","history","user","state","isAuthenticated","pending","push","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;;AAEA,MAAMC,cAAc,GAAG,QAAuC;AAAA;;AAAA,MAAtC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAsC;AAC5D,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,IAAI,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,IAAI,CAACE,eAAN,IAAyB,CAACF,IAAI,CAACG,OAAnC,EAA4CJ,OAAO,CAACK,IAAR,CAAa,GAAb;AAC7C,GAFQ,CAAT;AAIA,sBACE,QAAC,KAAD,OACMN,IADN;AAEE,IAAA,MAAM,EAAGO,KAAD,IAAW;AACjB,UAAIL,IAAI,CAACE,eAAL,IAAwB,CAACF,IAAI,CAACG,OAAlC,EAA2C;AACzC,4BAAO,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO,oBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACR;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjBD;;GAAMV,c;UACYF,U,EACHF,W;;;KAFTI,c;AAmBN,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport LoadingScreen from \"../Components/LoadingScreen\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const history = useHistory();\r\n  const user = useSelector((state) => state.user);\r\n  useEffect(() => {\r\n    if (!user.isAuthenticated && !user.pending) history.push(\"/\");\r\n  });\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (user.isAuthenticated && !user.pending) {\r\n          return <Component {...props} />;\r\n        } else return <LoadingScreen />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"]},"metadata":{},"sourceType":"module"}