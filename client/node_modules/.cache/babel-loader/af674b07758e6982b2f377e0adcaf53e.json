{"ast":null,"code":"import axios from 'axios';\nimport { setLoading, successCreatingList, successDeletingList, successFetchingLists, updateListTitle } from '../Redux/Slices/listSlice';\nimport { openAlert } from '../Redux/Slices/alertSlice';\nimport { addMembers, setActivityLoading, updateActivity, updateBackground, updateDescription } from '../Redux/Slices/boardSlice';\nconst listRoute = 'https://trello-mern-backend.onrender.com/list';\nconst boardRoute = 'http://localhost:5001/board';\nexport const getLists = async (boardId, dispatch) => {\n  dispatch(setLoading(true));\n\n  try {\n    const res = await axios.get(listRoute + '/' + boardId);\n    dispatch(successFetchingLists(res.data));\n    setTimeout(() => {\n      dispatch(setLoading(false));\n    }, 300);\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    dispatch(setLoading(false));\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const activityUpdate = async (boardId, dispatch) => {\n  dispatch(setActivityLoading(true));\n\n  try {\n    const res = await axios.get(boardRoute + '/' + boardId + '/activity');\n    dispatch(updateActivity(res.data));\n    dispatch(setActivityLoading(false));\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n\n    dispatch(setActivityLoading(false));\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const createList = async (title, boardId, dispatch) => {\n  dispatch(setLoading(true));\n\n  try {\n    const res = await axios.post(listRoute + '/create', {\n      title: title,\n      boardId: boardId\n    });\n    dispatch(successCreatingList(res.data));\n    dispatch(setLoading(false));\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n\n    dispatch(setLoading(false));\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const DeleteList = async (listId, boardId, dispatch) => {\n  dispatch(setLoading(true));\n\n  try {\n    await axios.delete(listRoute + '/' + boardId + '/' + listId);\n    await dispatch(successDeletingList(listId));\n    dispatch(setLoading(false));\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n\n    dispatch(setLoading(false));\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\n_c = DeleteList;\nexport const listTitleUpdate = async (listId, boardId, title, dispatch) => {\n  try {\n    await dispatch(updateListTitle({\n      listId: listId,\n      title: title\n    }));\n    await axios.put(listRoute + '/' + boardId + '/' + listId + '/update-title', {\n      title: title\n    });\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const boardDescriptionUpdate = async (boardId, description, dispatch) => {\n  try {\n    await dispatch(updateDescription(description));\n    await axios.put(`${boardRoute}/${boardId}/update-board-description`, {\n      description\n    });\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const boardBackgroundUpdate = async (boardId, background, isImage, dispatch) => {\n  try {\n    await dispatch(updateBackground({\n      background,\n      isImage\n    }));\n    await axios.put(`${boardRoute}/${boardId}/update-background`, {\n      background,\n      isImage\n    });\n  } catch (error) {\n    var _error$response7, _error$response7$data;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const boardMemberAdd = async (boardId, members, dispatch) => {\n  try {\n    const result = await axios.post(`${boardRoute}/${boardId}/add-member`, {\n      members\n    });\n    await dispatch(addMembers(result.data));\n    dispatch(openAlert({\n      message: 'Members are added to this board successfully',\n      severity: 'success'\n    }));\n  } catch (error) {\n    var _error$response8, _error$response8$data;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteList\");","map":{"version":3,"sources":["C:/Users/Dell/trello-clone-mern/client/src/Services/boardService.js"],"names":["axios","setLoading","successCreatingList","successDeletingList","successFetchingLists","updateListTitle","openAlert","addMembers","setActivityLoading","updateActivity","updateBackground","updateDescription","listRoute","boardRoute","getLists","boardId","dispatch","res","get","data","setTimeout","error","message","response","errMessage","severity","activityUpdate","createList","title","post","DeleteList","listId","delete","listTitleUpdate","put","boardDescriptionUpdate","description","boardBackgroundUpdate","background","isImage","boardMemberAdd","members","result"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n\tsetLoading,\r\n\tsuccessCreatingList,\r\n\tsuccessDeletingList,\r\n\tsuccessFetchingLists,\r\n\tupdateListTitle,\r\n} from '../Redux/Slices/listSlice';\r\nimport { openAlert } from '../Redux/Slices/alertSlice';\r\nimport { addMembers, setActivityLoading, updateActivity, updateBackground, updateDescription } from '../Redux/Slices/boardSlice';\r\n\r\nconst listRoute = 'https://trello-mern-backend.onrender.com/list';\r\nconst boardRoute = 'http://localhost:5001/board';\r\n\r\nexport const getLists = async (boardId, dispatch) => {\r\n\tdispatch(setLoading(true));\r\n\ttry {\r\n\t\tconst res = await axios.get(listRoute + '/' + boardId);\r\n\t\tdispatch(successFetchingLists(res.data));\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch(setLoading(false));\r\n\t\t}, 300);\r\n\t} catch (error) {\r\n\t\tdispatch(setLoading(false));\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const activityUpdate = async (boardId, dispatch) => {\r\n\tdispatch(setActivityLoading(true));\r\n\ttry {\r\n\t\tconst res = await axios.get(boardRoute + '/' + boardId + '/activity');\r\n\t\tdispatch(updateActivity(res.data));\r\n\t\tdispatch(setActivityLoading(false));\r\n\t} catch (error) {\r\n\t\tdispatch(setActivityLoading(false));\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const createList = async (title, boardId, dispatch) => {\r\n\tdispatch(setLoading(true));\r\n\ttry {\r\n\t\tconst res = await axios.post(listRoute + '/create', { title: title, boardId: boardId });\r\n\t\tdispatch(successCreatingList(res.data));\r\n\t\tdispatch(setLoading(false));\r\n\t} catch (error) {\r\n\t\tdispatch(setLoading(false));\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const DeleteList = async (listId, boardId, dispatch) => {\r\n\tdispatch(setLoading(true));\r\n\ttry {\r\n\t\tawait axios.delete(listRoute + '/' + boardId + '/' + listId);\r\n\t\tawait dispatch(successDeletingList(listId));\r\n\t\tdispatch(setLoading(false));\r\n\t} catch (error) {\r\n\t\tdispatch(setLoading(false));\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const listTitleUpdate = async (listId, boardId, title, dispatch) => {\r\n\ttry {\r\n\t\tawait dispatch(updateListTitle({ listId: listId, title: title }));\r\n\t\tawait axios.put(listRoute + '/' + boardId + '/' + listId + '/update-title', { title: title });\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const boardDescriptionUpdate = async (boardId, description, dispatch) => {\r\n\ttry {\r\n\t\tawait dispatch(updateDescription(description));\r\n\t\tawait axios.put(`${boardRoute}/${boardId}/update-board-description`,{\r\n\t\t\tdescription\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const boardBackgroundUpdate = async (boardId, background, isImage, dispatch) => {\r\n\ttry {\r\n\t\tawait dispatch(updateBackground({background,isImage}));\r\n\t\tawait axios.put(`${boardRoute}/${boardId}/update-background`,{\r\n\t\t\tbackground,\r\n\t\t\tisImage,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const boardMemberAdd = async (boardId, members, dispatch) => {\r\n\ttry {\r\n\t\tconst result = await axios.post(`${boardRoute}/${boardId}/add-member`,{\r\n\t\t\tmembers\r\n\t\t});\r\n\t\tawait dispatch(addMembers(result.data));\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: 'Members are added to this board successfully',\r\n\t\t\t\tseverity: 'success',\r\n\t\t\t})\r\n\t\t);\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}