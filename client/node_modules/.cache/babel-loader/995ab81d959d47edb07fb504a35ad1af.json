{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  userInfo: null,\n  isAuthenticated: null,\n  pending: true,\n  loading: false,\n  token: localStorage.getItem(\"token\")\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    registrationStart: state => {\n      state.pending = true;\n    },\n    registrationEnd: state => {\n      state.pending = false;\n    },\n    loginStart: state => {\n      state.pending = true;\n    },\n    loginSuccess: (state, action) => {\n      state.pending = false;\n      state.isAuthenticated = true;\n      state.userInfo = action.payload.user;\n      state.token = action.payload.user.token;\n      localStorage.setItem(\"token\", action.payload.user.token);\n    },\n    loginFailure: state => {\n      state.pending = false;\n      state.isAuthenticated = false;\n      localStorage.removeItem(\"token\");\n    },\n    loadStart: state => {\n      state.pending = true;\n    },\n    loadSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.userInfo = action.payload.user;\n      state.token = localStorage.getItem(\"token\");\n      state.pending = false;\n    },\n    loadFailure: state => {\n      state.pending = false;\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n      state.userInfo = null;\n      state.token = null;\n      localStorage.removeItem(\"token\");\n    },\n    fetchingStart: state => {\n      state.loading = true;\n    },\n    fetchingFinish: state => {\n      state.loading = false;\n    },\n    addNewBoard: (state, action) => {\n      state.userInfo.boards.unshift(action.payload);\n    }\n  }\n});\nexport const {\n  registrationStart,\n  registrationEnd,\n  loginStart,\n  loginFailure,\n  loginSuccess,\n  loadStart,\n  loadSuccess,\n  loadFailure,\n  logout,\n  fetchingStart,\n  fetchingFinish,\n  addNewBoard\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/Dell/trello-clone-mern/client/src/Redux/Slices/userSlice.js"],"names":["createSlice","initialState","userInfo","isAuthenticated","pending","loading","token","localStorage","getItem","userSlice","name","reducers","registrationStart","state","registrationEnd","loginStart","loginSuccess","action","payload","user","setItem","loginFailure","removeItem","loadStart","loadSuccess","loadFailure","logout","fetchingStart","fetchingFinish","addNewBoard","boards","unshift","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  userInfo: null,\r\n  isAuthenticated: null,\r\n  pending: true,\r\n  loading: false,\r\n  token: localStorage.getItem(\"token\"),\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    registrationStart: (state) => {\r\n      state.pending = true;\r\n    },\r\n    registrationEnd: (state) => {\r\n      state.pending = false;\r\n    },\r\n    loginStart: (state) => {\r\n      state.pending = true;\r\n    },\r\n    loginSuccess: (state, action) => {\r\n      state.pending = false;\r\n      state.isAuthenticated = true;\r\n      state.userInfo = action.payload.user;\r\n      state.token = action.payload.user.token;\r\n      localStorage.setItem(\"token\", action.payload.user.token);\r\n    },\r\n    loginFailure: (state) => {\r\n      state.pending = false;\r\n      state.isAuthenticated = false;\r\n      localStorage.removeItem(\"token\");\r\n    },\r\n    loadStart: (state) => {\r\n      state.pending = true;\r\n    },\r\n    loadSuccess: (state, action) => {\r\n      state.isAuthenticated = true;\r\n      state.userInfo = action.payload.user;\r\n      state.token = localStorage.getItem(\"token\");\r\n      state.pending = false;\r\n    },\r\n    loadFailure: (state) => {\r\n      state.pending = false;\r\n    },\r\n    logout: (state) => {\r\n      state.isAuthenticated = false;\r\n      state.userInfo = null;\r\n      state.token = null;\r\n      localStorage.removeItem(\"token\");\r\n    },\r\n    fetchingStart: (state)=>{\r\n      state.loading = true;\r\n    },\r\n    fetchingFinish: (state) => {\r\n      state.loading = false;\r\n    },\r\n    addNewBoard: (state,action) => {\r\n      state.userInfo.boards.unshift(action.payload);\r\n    }\r\n  },\r\n});\r\n\r\nexport const {\r\n  registrationStart,\r\n  registrationEnd,\r\n  loginStart,\r\n  loginFailure,\r\n  loginSuccess,\r\n  loadStart,\r\n  loadSuccess,\r\n  loadFailure,\r\n  logout,\r\n  fetchingStart,\r\n  fetchingFinish,\r\n  addNewBoard\r\n} = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}