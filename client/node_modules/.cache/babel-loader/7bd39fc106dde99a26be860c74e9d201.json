{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\trello-clone-mern\\\\client\\\\src\\\\Components\\\\Modals\\\\EditCardModal\\\\Popovers\\\\Attachment\\\\EditAttachmentPopover.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { SearchArea, Title, BlueButton } from '../Labels/styled';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { attachmentUpdate } from '../../../../../Services/cardService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-start;\n\tjustify-content: center;\n\theight: fit-content;\n\twidth: 100%;\n\tpadding-bottom: 0.5rem;\n\tgap: 0.2rem;\n`;\n_c = Container;\n\nconst EditAttachmentPopover = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const card = useSelector(state => state.card);\n  const [link, setLink] = useState(props.link);\n  const [linkName, setLinkName] = useState(props.name ? props.name : props.link);\n\n  const handleAttachClick = async () => {\n    props.closeCallback();\n    await attachmentUpdate(card.cardId, card.listId, card.boardId, props._id, new RegExp(/^https?:\\/\\//).test(link) ? link : 'http://' + link, linkName, dispatch);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SearchArea, {\n      placeholder: \"Paste any link here...\",\n      value: link,\n      onChange: e => setLink(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), link && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        style: {\n          marginTop: '0.7rem'\n        },\n        children: \"Link name (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(SearchArea, {\n        value: linkName,\n        onChange: e => setLinkName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(BlueButton, {\n      style: {\n        marginTop: '1rem'\n      },\n      onClick: handleAttachClick,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_s(EditAttachmentPopover, \"w9tA/cE8qAjxtUsLMgOo6z7XpBo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = EditAttachmentPopover;\nexport default EditAttachmentPopover;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"EditAttachmentPopover\");","map":{"version":3,"sources":["C:/Users/Dell/trello-clone-mern/client/src/Components/Modals/EditCardModal/Popovers/Attachment/EditAttachmentPopover.js"],"names":["React","useState","SearchArea","Title","BlueButton","styled","useDispatch","useSelector","attachmentUpdate","Container","div","EditAttachmentPopover","props","dispatch","card","state","link","setLink","linkName","setLinkName","name","handleAttachClick","closeCallback","cardId","listId","boardId","_id","RegExp","test","e","target","value","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,UAA5B,QAA8C,kBAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,QAAiC,qCAAjC;;;AACA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMD,S;;AAWN,MAAME,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,IAAI,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAACW,KAAK,CAACI,IAAP,CAAhC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAACW,KAAK,CAACQ,IAAN,GAAaR,KAAK,CAACQ,IAAnB,GAA0BR,KAAK,CAACI,IAAjC,CAAxC;;AACA,QAAMK,iBAAiB,GAAG,YAAY;AACrCT,IAAAA,KAAK,CAACU,aAAN;AACA,UAAMd,gBAAgB,CAACM,IAAI,CAACS,MAAN,EAAcT,IAAI,CAACU,MAAnB,EAA2BV,IAAI,CAACW,OAAhC,EAAyCb,KAAK,CAACc,GAA/C,EAAoD,IAAIC,MAAJ,CAAW,cAAX,EAA2BC,IAA3B,CAAgCZ,IAAhC,IAAwCA,IAAxC,GAA+C,YAAYA,IAA/G,EAAqHE,QAArH,EAA+HL,QAA/H,CAAtB;AACA,GAHD;;AAIA,sBACC,QAAC,SAAD;AAAA,4BACC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,UAAD;AAAY,MAAA,WAAW,EAAC,wBAAxB;AAAiD,MAAA,KAAK,EAAEG,IAAxD;AAA8D,MAAA,QAAQ,EAAGa,CAAD,IAAOZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtF;AAAA;AAAA;AAAA;AAAA,YAFD,EAGEf,IAAI,iBACJ;AAAA,8BACC,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAEgB,UAAAA,SAAS,EAAE;AAAb,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEd,QAAnB;AAA6B,QAAA,QAAQ,EAAGW,CAAD,IAAOV,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AAAzD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA,oBAJF,eASC,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAA0C,MAAA,OAAO,EAAEX,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CAxBD;;GAAMV,qB;UACYL,W,EACJC,W;;;MAFRI,qB;AA0BN,eAAeA,qBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { SearchArea, Title, BlueButton } from '../Labels/styled';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { attachmentUpdate } from '../../../../../Services/cardService';\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: flex-start;\r\n\tjustify-content: center;\r\n\theight: fit-content;\r\n\twidth: 100%;\r\n\tpadding-bottom: 0.5rem;\r\n\tgap: 0.2rem;\r\n`;\r\n\r\nconst EditAttachmentPopover = (props) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst card = useSelector((state) => state.card);\r\n\tconst [link, setLink] = useState(props.link);\r\n\tconst [linkName, setLinkName] = useState(props.name ? props.name : props.link);\r\n\tconst handleAttachClick = async () => {\r\n\t\tprops.closeCallback();\r\n\t\tawait attachmentUpdate(card.cardId, card.listId, card.boardId, props._id, new RegExp(/^https?:\\/\\//).test(link) ? link : 'http://' + link, linkName, dispatch);\r\n\t};\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Title>Link</Title>\r\n\t\t\t<SearchArea placeholder='Paste any link here...' value={link} onChange={(e) => setLink(e.target.value)} />\r\n\t\t\t{link && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Title style={{ marginTop: '0.7rem' }}>Link name (optional)</Title>\r\n\t\t\t\t\t<SearchArea value={linkName} onChange={(e) => setLinkName(e.target.value)} />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t<BlueButton style={{ marginTop: '1rem' }} onClick={handleAttachClick}>\r\n\t\t\t\tUpdate\r\n\t\t\t</BlueButton>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default EditAttachmentPopover;\r\n"]},"metadata":{},"sourceType":"module"}