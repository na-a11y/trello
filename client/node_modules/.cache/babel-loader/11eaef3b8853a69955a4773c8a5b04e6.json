{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  id: '',\n  title: '',\n  backgroundImageLink: '',\n  isImage: true,\n  lists: [],\n  members: [],\n  activity: [],\n  loading: true,\n  description: '',\n  activityLoading: false\n};\nconst boardSlice = createSlice({\n  name: 'board',\n  initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    successFetchingBoard: (state, action) => {\n      state.id = action.payload._id;\n      state.title = action.payload.title;\n      state.backgroundImageLink = action.payload.backgroundImageLink;\n      state.isImage = action.payload.isImage;\n      state.lists = action.payload.lists;\n      state.members = action.payload.members;\n      state.activity = action.payload.activity;\n      state.description = action.payload.description;\n    },\n    updateTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    setActivityLoading: (state, action) => {\n      state.activityLoading = action.payload;\n    },\n    updateActivity: (state, action) => {\n      state.activity = action.payload;\n    },\n    updateDescription: (state, action) => {\n      state.description = action.payload;\n    },\n    updateBackground: (state, action) => {\n      const {\n        background,\n        isImage\n      } = action.payload;\n      state.backgroundImageLink = background;\n      state.isImage = isImage;\n    },\n    addMembers: (state, action) => {\n      state.members = action.payload;\n    }\n  }\n});\nexport const {\n  setLoading,\n  successFetchingBoard,\n  updateTitle,\n  setActivityLoading,\n  updateActivity,\n  updateDescription,\n  updateBackground,\n  addMembers\n} = boardSlice.actions;\nexport default boardSlice.reducer;","map":{"version":3,"sources":["C:/Users/Dell/trello-clone-mern/client/src/Redux/Slices/boardSlice.js"],"names":["createSlice","initialState","id","title","backgroundImageLink","isImage","lists","members","activity","loading","description","activityLoading","boardSlice","name","reducers","setLoading","state","action","payload","successFetchingBoard","_id","updateTitle","setActivityLoading","updateActivity","updateDescription","updateBackground","background","addMembers","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n\tid: '',\r\n\ttitle: '',\r\n\tbackgroundImageLink: '',\r\n\tisImage: true,\r\n\tlists: [],\r\n\tmembers: [],\r\n\tactivity: [],\r\n\tloading: true,\r\n\tdescription: '',\r\n\tactivityLoading: false,\r\n};\r\n\r\nconst boardSlice = createSlice({\r\n\tname: 'board',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetLoading: (state, action) => {\r\n\t\t\tstate.loading = action.payload;\r\n\t\t},\r\n\t\tsuccessFetchingBoard: (state, action) => {\r\n\t\t\tstate.id = action.payload._id;\r\n\t\t\tstate.title = action.payload.title;\r\n\t\t\tstate.backgroundImageLink = action.payload.backgroundImageLink;\r\n\t\t\tstate.isImage = action.payload.isImage;\r\n\t\t\tstate.lists = action.payload.lists;\r\n\t\t\tstate.members = action.payload.members;\r\n\t\t\tstate.activity = action.payload.activity;\r\n\t\t\tstate.description = action.payload.description;\r\n\t\t},\r\n\t\tupdateTitle: (state, action) => {\r\n\t\t\tstate.title = action.payload;\r\n\t\t},\r\n\t\tsetActivityLoading: (state, action) => {\r\n\t\t\tstate.activityLoading = action.payload;\r\n\t\t},\r\n\t\tupdateActivity: (state, action) => {\r\n\t\t\tstate.activity = action.payload;\r\n\t\t},\r\n\t\tupdateDescription: (state, action) => {\r\n\t\t\tstate.description = action.payload;\r\n\t\t},\r\n\t\tupdateBackground: (state, action) => {\r\n\t\t\tconst { background, isImage } = action.payload;\r\n\t\t\tstate.backgroundImageLink = background;\r\n\t\t\tstate.isImage = isImage;\r\n\t\t},\r\n\t\taddMembers: (state,action)=>{\r\n\t\t\tstate.members = action.payload;\r\n\t\t}\r\n\t},\r\n});\r\n\r\nexport const {\r\n\tsetLoading,\r\n\tsuccessFetchingBoard,\r\n\tupdateTitle,\r\n\tsetActivityLoading,\r\n\tupdateActivity,\r\n\tupdateDescription,\r\n\tupdateBackground,\r\n\taddMembers,\r\n} = boardSlice.actions;\r\nexport default boardSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}