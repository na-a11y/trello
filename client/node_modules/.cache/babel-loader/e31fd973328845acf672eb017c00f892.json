{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\trello-clone-mern\\\\client\\\\src\\\\Components\\\\Drawers\\\\RightDrawer\\\\MainMenu\\\\ActivitySection\\\\ActivitySection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport ActivityIcon from '@mui/icons-material/MessageOutlined';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Avatar from '@mui/material/Avatar';\nimport { ActionContainer, ActionWrapper, CommentTitle, Text, Date, CommentArea, Container, HeadWrapper, LoadingBox, HeadTitle, Wrapper } from './styled';\nimport moment from 'moment';\nimport { activityUpdate } from '../../../../../Services/boardService';\nimport CardLoadingSvg from \"../../../../../Images/cardLoading.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActivitySection = () => {\n  _s();\n\n  const board = useSelector(state => state.board);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    activityUpdate(board.id, dispatch);\n  }, [board.id, dispatch]);\n\n  const Comment = props => {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          width: 32,\n          height: 32,\n          bgcolor: props.color,\n          fontSize: '0.875rem',\n          fontWeight: '800'\n        },\n        children: props.name[0].toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ActionWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(CommentTitle, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              style: {\n                fontSize: '0.875rem'\n              },\n              children: props.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 8\n            }, this), \" on \", props.cardTitle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Date, {\n            children: moment(props.date).fromNow()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CommentArea, {\n          children: props.action\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this);\n  };\n\n  const Action = props => {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          width: 32,\n          height: 32,\n          bgcolor: props.color,\n          fontSize: '0.875rem',\n          fontWeight: '800'\n        },\n        children: props.name[0].toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ActionWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              fontSize: '0.875rem'\n            },\n            children: props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this), \" \", props.action]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Date, {\n          children: moment(props.date).calendar().indexOf('Today') === -1 ? moment(props.date).calendar() : moment(props.date).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(HeadWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ActivityIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(HeadTitle, {\n        children: \"Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: board.activityLoading ? /*#__PURE__*/_jsxDEV(LoadingBox, {\n        image: CardLoadingSvg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }, this) : board.activity.map(act => {\n        return act.actionType === 'action' ? /*#__PURE__*/_jsxDEV(Action, { ...act\n        }, act._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 8\n        }, this) : /*#__PURE__*/_jsxDEV(Comment, { ...act\n        }, act._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 8\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ActivitySection, \"m/PqusNHQ81obf75UHlu2BvyGmc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ActivitySection;\nexport default ActivitySection;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivitySection\");","map":{"version":3,"sources":["C:/Users/Dell/trello-clone-mern/client/src/Components/Drawers/RightDrawer/MainMenu/ActivitySection/ActivitySection.js"],"names":["React","useEffect","ActivityIcon","useDispatch","useSelector","Avatar","ActionContainer","ActionWrapper","CommentTitle","Text","Date","CommentArea","Container","HeadWrapper","LoadingBox","HeadTitle","Wrapper","moment","activityUpdate","ActivitySection","board","state","dispatch","id","Comment","props","width","height","bgcolor","color","fontSize","fontWeight","name","toUpperCase","cardTitle","date","fromNow","action","Action","calendar","indexOf","activityLoading","CardLoadingSvg","activity","map","act","actionType","_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport ActivityIcon from '@mui/icons-material/MessageOutlined';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {\r\n\tActionContainer,\r\n\tActionWrapper,\r\n\tCommentTitle,\r\n\tText,\r\n\tDate,\r\n\tCommentArea,\r\n\tContainer,\r\n\tHeadWrapper,\r\n\tLoadingBox,\r\n\tHeadTitle,\r\n\tWrapper,\r\n} from './styled';\r\nimport moment from 'moment';\r\nimport { activityUpdate } from '../../../../../Services/boardService';\r\nimport CardLoadingSvg from '../../../../../Images/cardLoading.svg';\r\n\r\nconst ActivitySection = () => {\r\n\tconst board = useSelector((state) => state.board);\r\n\tconst dispatch = useDispatch();\r\n\tuseEffect(() => {\r\n\t\tactivityUpdate(board.id, dispatch);\r\n\t}, [board.id, dispatch]);\r\n\r\n\tconst Comment = (props) => {\r\n\t\treturn (\r\n\t\t\t<ActionContainer>\r\n\t\t\t\t<Avatar sx={{ width: 32, height: 32, bgcolor: props.color, fontSize: '0.875rem', fontWeight: '800' }}>\r\n\t\t\t\t\t{props.name[0].toUpperCase()}\r\n\t\t\t\t</Avatar>\r\n\t\t\t\t<ActionWrapper>\r\n\t\t\t\t\t<CommentTitle>\r\n\t\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t\t<b style={{ fontSize: '0.875rem' }}>{props.name}</b> on {props.cardTitle}\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<Date>{moment(props.date).fromNow()}</Date>\r\n\t\t\t\t\t</CommentTitle>\r\n\t\t\t\t\t<CommentArea>{props.action}</CommentArea>\r\n\t\t\t\t</ActionWrapper>\r\n\t\t\t</ActionContainer>\r\n\t\t);\r\n\t};\r\n\r\n\tconst Action = (props) => {\r\n\t\treturn (\r\n\t\t\t<ActionContainer>\r\n\t\t\t\t<Avatar sx={{ width: 32, height: 32, bgcolor: props.color, fontSize: '0.875rem', fontWeight: '800' }}>\r\n\t\t\t\t\t{props.name[0].toUpperCase()}\r\n\t\t\t\t</Avatar>\r\n\t\t\t\t<ActionWrapper>\r\n\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t<b style={{ fontSize: '0.875rem' }}>{props.name}</b> {props.action}\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t\t<Date>\r\n\t\t\t\t\t\t{moment(props.date).calendar().indexOf('Today') === -1\r\n\t\t\t\t\t\t\t? moment(props.date).calendar()\r\n\t\t\t\t\t\t\t: moment(props.date).fromNow()}\r\n\t\t\t\t\t</Date>\r\n\t\t\t\t</ActionWrapper>\r\n\t\t\t</ActionContainer>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<HeadWrapper>\r\n\t\t\t\t<ActivityIcon fontSize='small' />\r\n\t\t\t\t<HeadTitle>Activity</HeadTitle>\r\n\t\t\t</HeadWrapper>\r\n\t\t\t<Wrapper>\r\n\t\t\t\t{board.activityLoading ? (\r\n\t\t\t\t\t<LoadingBox image={CardLoadingSvg} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\tboard.activity.map((act) => {\r\n\t\t\t\t\t\treturn act.actionType === 'action' ? (\r\n\t\t\t\t\t\t\t<Action key={act._id} {...act} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Comment key={act._id} {...act} />\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t)}\r\n\t\t\t</Wrapper>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ActivitySection;\r\n"]},"metadata":{},"sourceType":"module"}