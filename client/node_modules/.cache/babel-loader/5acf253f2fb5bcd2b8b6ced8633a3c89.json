{"ast":null,"code":"import axios from 'axios';\nimport { openAlert } from '../Redux/Slices/alertSlice';\nimport { setPending, setCard, updateTitle, updateDescription, addComment, updateComment, deleteComment, addMember, deleteMember, createLabel, updateLabel, deleteLabel, updateLabelSelection, updateCreatedLabelId, createChecklist, updateCreatedChecklist, deleteChecklist, addChecklistItem, updateAddedChecklistItemId, setChecklistItemCompleted, deleteChecklistItem, setChecklistItemText, updateStartDueDates, updateDateCompleted, addAttachment, updateAddedAttachmentId, deleteAttachment, updateAttachment, updateCover } from '../Redux/Slices/cardSlice';\nimport { addAttachmentForCard, addChecklistItemForCard, createChecklistForCard, createLabelForCard, deleteAttachmentOfCard, deleteChecklistItemOfCard, deleteChecklistOfCard, deleteLabelOfCard, deleteMemberOfCard, setCardTitle, setChecklistItemCompletedOfCard, setChecklistItemTextOfCard, updateCoverOfCard, updateDateCompletedOfCard, updateDescriptionOfCard, updateLabelOfCard, updateLabelSelectionOfCard, updateMemberOfCard, updateStartDueDatesOfCard } from '../Redux/Slices/listSlice';\nconst baseUrl = 'https://trello-mern-backend.onrender.com/card';\nlet submitCall = Promise.resolve();\nexport const getCard = async (cardId, listId, boardId, dispatch) => {\n  dispatch(setPending(true));\n\n  try {\n    let response = '';\n    submitCall = submitCall.then(() => axios.get(baseUrl + '/' + boardId + '/' + listId + '/' + cardId).then(res => {\n      response = res;\n    }));\n    await submitCall;\n    const card = await JSON.parse(JSON.stringify(response.data));\n    dispatch(setCard(card));\n    dispatch(setPending(false));\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    dispatch(setPending(false));\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const titleUpdate = async (cardId, listId, boardId, title, dispatch) => {\n  try {\n    dispatch(setCardTitle({\n      listId,\n      cardId,\n      title\n    }));\n    dispatch(updateTitle(title));\n    submitCall = submitCall.then(() => axios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId, {\n      title: title\n    }));\n    await submitCall;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const descriptionUpdate = async (cardId, listId, boardId, description, dispatch) => {\n  try {\n    dispatch(updateDescription(description));\n    dispatch(updateDescriptionOfCard({\n      listId,\n      cardId,\n      description\n    }));\n    submitCall = submitCall.then(() => axios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId, {\n      description: description\n    }));\n    await submitCall;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const comment = async (cardId, listId, boardId, text, userName, dispatch) => {\n  try {\n    dispatch(setPending(true));\n    let response = '';\n    submitCall = submitCall.then(() => axios.post(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/add-comment', {\n      text: text\n    }).then(res => {\n      response = res;\n    }));\n    await submitCall;\n    dispatch(addComment(response.data));\n    dispatch(setPending(false));\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n\n    dispatch(setPending(false));\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const commentUpdate = async (cardId, listId, boardId, text, commentId, dispatch) => {\n  try {\n    dispatch(updateComment(commentId, text));\n    submitCall = submitCall.then(() => axios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + commentId, {\n      text: text\n    }));\n    await submitCall;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const commentDelete = async (cardId, listId, boardId, commentId, dispatch) => {\n  try {\n    dispatch(deleteComment(commentId));\n    submitCall = submitCall.then(() => axios.delete(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + commentId));\n    await submitCall;\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const memberAdd = async (cardId, listId, boardId, memberId, memberName, memberColor, dispatch) => {\n  try {\n    dispatch(addMember({\n      memberId,\n      memberName,\n      memberColor\n    }));\n    dispatch(updateMemberOfCard({\n      listId,\n      cardId,\n      memberId,\n      memberName,\n      memberColor\n    }));\n    submitCall = submitCall.then(() => axios.post(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/add-member', {\n      memberId: memberId\n    }));\n    await submitCall;\n  } catch (error) {\n    var _error$response7, _error$response7$data;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const memberDelete = async (cardId, listId, boardId, memberId, memberName, dispatch) => {\n  try {\n    dispatch(deleteMember({\n      memberId\n    }));\n    dispatch(deleteMemberOfCard({\n      listId,\n      cardId,\n      memberId\n    }));\n    submitCall = submitCall.then(() => axios.delete(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + memberId + '/delete-member'));\n    await submitCall;\n  } catch (error) {\n    var _error$response8, _error$response8$data;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const labelCreate = async (cardId, listId, boardId, text, color, backColor, dispatch) => {\n  try {\n    dispatch(createLabel({\n      _id: 'notUpdated',\n      text,\n      color,\n      backColor,\n      selected: true\n    }));\n    let response = '';\n    submitCall = submitCall.then(() => axios.post(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/create-label', {\n      text,\n      color,\n      backColor\n    }).then(res => {\n      response = res;\n    }));\n    await submitCall;\n    dispatch(updateCreatedLabelId(response.data.labelId));\n    dispatch(createLabelForCard({\n      listId,\n      cardId,\n      _id: response.data.labelId,\n      text,\n      color,\n      backColor,\n      selected: true\n    }));\n  } catch (error) {\n    var _error$response9, _error$response9$data;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const labelUpdate = async (cardId, listId, boardId, labelId, label, dispatch) => {\n  try {\n    dispatch(updateLabel({\n      labelId: labelId,\n      text: label.text,\n      color: label.color,\n      backColor: label.backColor\n    }));\n    dispatch(updateLabelOfCard({\n      listId,\n      cardId,\n      labelId: labelId,\n      text: label.text,\n      color: label.color,\n      backColor: label.backColor\n    }));\n    submitCall = submitCall.then(() => axios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + labelId + '/update-label', label));\n    await submitCall;\n  } catch (error) {\n    var _error$response10, _error$response10$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const labelDelete = async (cardId, listId, boardId, labelId, dispatch) => {\n  try {\n    dispatch(deleteLabel(labelId));\n    dispatch(deleteLabelOfCard({\n      listId,\n      cardId,\n      labelId\n    }));\n    submitCall = submitCall.then(() => axios.delete(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + labelId + '/delete-label'));\n    await submitCall;\n  } catch (error) {\n    var _error$response11, _error$response11$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : (_error$response11$dat = _error$response11.data) === null || _error$response11$dat === void 0 ? void 0 : _error$response11$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const labelUpdateSelection = async (cardId, listId, boardId, labelId, selected, dispatch) => {\n  try {\n    dispatch(updateLabelSelection({\n      labelId: labelId,\n      selected: selected\n    }));\n    dispatch(updateLabelSelectionOfCard({\n      listId,\n      cardId,\n      labelId,\n      selected\n    }));\n    submitCall = submitCall.then(() => axios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + labelId + '/update-label-selection', {\n      selected: selected\n    }));\n    await submitCall;\n  } catch (error) {\n    var _error$response12, _error$response12$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const checklistCreate = async (cardId, listId, boardId, title, dispatch) => {\n  try {\n    dispatch(createChecklist({\n      _id: 'notUpdated',\n      title\n    }));\n    let response = '';\n    submitCall = submitCall.then(() => axios.post(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/create-checklist', {\n      title\n    }).then(res => {\n      response = res;\n    }));\n    await submitCall;\n    dispatch(updateCreatedChecklist(response.data.checklistId));\n    dispatch(createChecklistForCard({\n      listId,\n      cardId,\n      _id: response.data.checklistId,\n      title\n    }));\n  } catch (error) {\n    var _error$response13, _error$response13$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : (_error$response13$dat = _error$response13.data) === null || _error$response13$dat === void 0 ? void 0 : _error$response13$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const checklistDelete = async (cardId, listId, boardId, checklistId, dispatch) => {\n  try {\n    dispatch(deleteChecklist(checklistId));\n    dispatch(deleteChecklistOfCard({\n      listId,\n      cardId,\n      checklistId\n    }));\n    submitCall = submitCall.then(() => axios.delete(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + checklistId + '/delete-checklist'));\n    await submitCall;\n  } catch (error) {\n    var _error$response14, _error$response14$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : (_error$response14$dat = _error$response14.data) === null || _error$response14$dat === void 0 ? void 0 : _error$response14$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const checklistItemAdd = async (cardId, listId, boardId, checklistId, text, dispatch) => {\n  try {\n    dispatch(addChecklistItem({\n      checklistId: checklistId,\n      _id: 'notUpdated',\n      text: text\n    }));\n    let response = '';\n    submitCall = submitCall.then(() => axios.post(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + checklistId + '/add-checklist-item', {\n      text\n    }).then(res => {\n      response = res;\n    }));\n    await submitCall;\n    dispatch(updateAddedChecklistItemId({\n      checklistId: checklistId,\n      checklistItemId: response.data.checklistItemId\n    }));\n    dispatch(addChecklistItemForCard({\n      listId,\n      cardId,\n      checklistId: checklistId,\n      _id: response.data.checklistItemId,\n      text: text\n    }));\n  } catch (error) {\n    var _error$response15, _error$response15$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : (_error$response15$dat = _error$response15.data) === null || _error$response15$dat === void 0 ? void 0 : _error$response15$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const checklistItemCompletedSet = async (cardId, listId, boardId, checklistId, checklistItemId, completed, dispatch) => {\n  try {\n    dispatch(setChecklistItemCompleted({\n      checklistId: checklistId,\n      checklistItemId: checklistItemId,\n      completed: completed\n    }));\n    dispatch(setChecklistItemCompletedOfCard({\n      listId,\n      cardId,\n      checklistId: checklistId,\n      checklistItemId: checklistItemId,\n      completed: completed\n    }));\n    submitCall = submitCall.then(() => axios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + checklistId + '/' + checklistItemId + '/set-checklist-item-completed', {\n      completed\n    }));\n    await submitCall;\n  } catch (error) {\n    var _error$response16, _error$response16$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : (_error$response16$dat = _error$response16.data) === null || _error$response16$dat === void 0 ? void 0 : _error$response16$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const checklistItemTextSet = async (cardId, listId, boardId, checklistId, checklistItemId, text, dispatch) => {\n  try {\n    dispatch(setChecklistItemText({\n      checklistId: checklistId,\n      checklistItemId: checklistItemId,\n      text: text\n    }));\n    dispatch(setChecklistItemTextOfCard({\n      listId,\n      cardId,\n      checklistId: checklistId,\n      checklistItemId: checklistItemId,\n      text: text\n    }));\n    submitCall = submitCall.then(() => axios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + checklistId + '/' + checklistItemId + '/set-checklist-item-text', {\n      text\n    }));\n    await submitCall;\n  } catch (error) {\n    var _error$response17, _error$response17$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : (_error$response17$dat = _error$response17.data) === null || _error$response17$dat === void 0 ? void 0 : _error$response17$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const checklistItemDelete = async (cardId, listId, boardId, checklistId, checklistItemId, dispatch) => {\n  try {\n    dispatch(deleteChecklistItem({\n      checklistId: checklistId,\n      checklistItemId: checklistItemId\n    }));\n    dispatch(deleteChecklistItemOfCard({\n      listId,\n      cardId,\n      checklistId: checklistId,\n      checklistItemId: checklistItemId\n    }));\n    submitCall = submitCall.then(() => axios.delete(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + checklistId + '/' + checklistItemId + '/delete-checklist-item'));\n    await submitCall;\n  } catch (error) {\n    var _error$response18, _error$response18$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : (_error$response18$dat = _error$response18.data) === null || _error$response18$dat === void 0 ? void 0 : _error$response18$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const startDueDatesUpdate = async (cardId, listId, boardId, startDate, dueDate, dueTime, dispatch) => {\n  try {\n    dispatch(updateStartDueDates({\n      startDate,\n      dueDate,\n      dueTime\n    }));\n    dispatch(updateStartDueDatesOfCard({\n      listId,\n      cardId,\n      startDate,\n      dueDate,\n      dueTime\n    }));\n    submitCall = submitCall.then(() => axios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/update-dates', {\n      startDate,\n      dueDate,\n      dueTime\n    }));\n    await submitCall;\n  } catch (error) {\n    var _error$response19, _error$response19$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : (_error$response19$dat = _error$response19.data) === null || _error$response19$dat === void 0 ? void 0 : _error$response19$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const dateCompletedUpdate = async (cardId, listId, boardId, completed, dispatch) => {\n  try {\n    dispatch(updateDateCompleted(completed));\n    dispatch(updateDateCompletedOfCard({\n      listId,\n      cardId,\n      completed\n    }));\n    submitCall = submitCall.then(() => axios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/update-date-completed', {\n      completed\n    }));\n    await submitCall;\n  } catch (error) {\n    var _error$response20, _error$response20$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : (_error$response20$dat = _error$response20.data) === null || _error$response20$dat === void 0 ? void 0 : _error$response20$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const attachmentAdd = async (cardId, listId, boardId, link, name, dispatch) => {\n  try {\n    dispatch(addAttachment({\n      link: link,\n      name: name,\n      _id: 'notUpdated',\n      date: Date()\n    }));\n    let response = '';\n    submitCall = submitCall.then(() => axios.post(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/add-attachment', {\n      link: link,\n      name: name\n    }).then(res => {\n      response = res;\n    }));\n    await submitCall;\n    dispatch(updateAddedAttachmentId(response.data.attachmentId));\n    dispatch(addAttachmentForCard({\n      listId,\n      cardId,\n      link: link,\n      name: name,\n      _id: response.data.attachmentId,\n      date: Date()\n    }));\n  } catch (error) {\n    var _error$response21, _error$response21$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response21 = error.response) === null || _error$response21 === void 0 ? void 0 : (_error$response21$dat = _error$response21.data) === null || _error$response21$dat === void 0 ? void 0 : _error$response21$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const attachmentDelete = async (cardId, listId, boardId, attachmentId, dispatch) => {\n  try {\n    dispatch(deleteAttachment(attachmentId));\n    dispatch(deleteAttachmentOfCard({\n      listId,\n      cardId,\n      attachmentId\n    }));\n    submitCall = submitCall.then(() => axios.delete(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + attachmentId + '/delete-attachment'));\n    await submitCall;\n  } catch (error) {\n    var _error$response22, _error$response22$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response22 = error.response) === null || _error$response22 === void 0 ? void 0 : (_error$response22$dat = _error$response22.data) === null || _error$response22$dat === void 0 ? void 0 : _error$response22$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const attachmentUpdate = async (cardId, listId, boardId, attachmentId, link, name, dispatch) => {\n  try {\n    dispatch(updateAttachment({\n      attachmentId: attachmentId,\n      link: link,\n      name: name\n    }));\n    submitCall = submitCall.then(() => axios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + attachmentId + '/update-attachment', {\n      link: link,\n      name: name\n    }));\n    await submitCall;\n  } catch (error) {\n    var _error$response23, _error$response23$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response23 = error.response) === null || _error$response23 === void 0 ? void 0 : (_error$response23$dat = _error$response23.data) === null || _error$response23$dat === void 0 ? void 0 : _error$response23$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};\nexport const coverUpdate = async (cardId, listId, boardId, color, isSizeOne, dispatch) => {\n  try {\n    dispatch(updateCover({\n      color: color,\n      isSizeOne: isSizeOne\n    }));\n    dispatch(updateCoverOfCard({\n      listId,\n      cardId,\n      color,\n      isSizeOne\n    }));\n    submitCall = submitCall.then(() => axios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/update-cover', {\n      color: color,\n      isSizeOne: isSizeOne\n    }));\n    await submitCall;\n  } catch (error) {\n    var _error$response24, _error$response24$dat;\n\n    dispatch(openAlert({\n      message: (error === null || error === void 0 ? void 0 : (_error$response24 = error.response) === null || _error$response24 === void 0 ? void 0 : (_error$response24$dat = _error$response24.data) === null || _error$response24$dat === void 0 ? void 0 : _error$response24$dat.errMessage) ? error.response.data.errMessage : error.message,\n      severity: 'error'\n    }));\n  }\n};","map":{"version":3,"sources":["C:/Users/Dell/trello-clone-mern/client/src/Services/cardService.js"],"names":["axios","openAlert","setPending","setCard","updateTitle","updateDescription","addComment","updateComment","deleteComment","addMember","deleteMember","createLabel","updateLabel","deleteLabel","updateLabelSelection","updateCreatedLabelId","createChecklist","updateCreatedChecklist","deleteChecklist","addChecklistItem","updateAddedChecklistItemId","setChecklistItemCompleted","deleteChecklistItem","setChecklistItemText","updateStartDueDates","updateDateCompleted","addAttachment","updateAddedAttachmentId","deleteAttachment","updateAttachment","updateCover","addAttachmentForCard","addChecklistItemForCard","createChecklistForCard","createLabelForCard","deleteAttachmentOfCard","deleteChecklistItemOfCard","deleteChecklistOfCard","deleteLabelOfCard","deleteMemberOfCard","setCardTitle","setChecklistItemCompletedOfCard","setChecklistItemTextOfCard","updateCoverOfCard","updateDateCompletedOfCard","updateDescriptionOfCard","updateLabelOfCard","updateLabelSelectionOfCard","updateMemberOfCard","updateStartDueDatesOfCard","baseUrl","submitCall","Promise","resolve","getCard","cardId","listId","boardId","dispatch","response","then","get","res","card","JSON","parse","stringify","data","error","message","errMessage","severity","titleUpdate","title","put","descriptionUpdate","description","comment","text","userName","post","commentUpdate","commentId","commentDelete","delete","memberAdd","memberId","memberName","memberColor","memberDelete","labelCreate","color","backColor","_id","selected","labelId","labelUpdate","label","labelDelete","labelUpdateSelection","checklistCreate","checklistId","checklistDelete","checklistItemAdd","checklistItemId","checklistItemCompletedSet","completed","checklistItemTextSet","checklistItemDelete","startDueDatesUpdate","startDate","dueDate","dueTime","dateCompletedUpdate","attachmentAdd","link","name","date","Date","attachmentId","attachmentDelete","attachmentUpdate","coverUpdate","isSizeOne"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { openAlert } from '../Redux/Slices/alertSlice';\r\nimport {\r\n\tsetPending,\r\n\tsetCard,\r\n\tupdateTitle,\r\n\tupdateDescription,\r\n\taddComment,\r\n\tupdateComment,\r\n\tdeleteComment,\r\n\taddMember,\r\n\tdeleteMember,\r\n\tcreateLabel,\r\n\tupdateLabel,\r\n\tdeleteLabel,\r\n\tupdateLabelSelection,\r\n\tupdateCreatedLabelId,\r\n\tcreateChecklist,\r\n\tupdateCreatedChecklist,\r\n\tdeleteChecklist,\r\n\taddChecklistItem,\r\n\tupdateAddedChecklistItemId,\r\n\tsetChecklistItemCompleted,\r\n\tdeleteChecklistItem,\r\n\tsetChecklistItemText,\r\n\tupdateStartDueDates,\r\n\tupdateDateCompleted,\r\n\taddAttachment,\r\n\tupdateAddedAttachmentId,\r\n\tdeleteAttachment,\r\n\tupdateAttachment,\r\n\tupdateCover,\r\n} from '../Redux/Slices/cardSlice';\r\nimport {\r\n\taddAttachmentForCard,\r\n\taddChecklistItemForCard,\r\n\tcreateChecklistForCard,\r\n\tcreateLabelForCard,\r\n\tdeleteAttachmentOfCard,\r\n\tdeleteChecklistItemOfCard,\r\n\tdeleteChecklistOfCard,\r\n\tdeleteLabelOfCard,\r\n\tdeleteMemberOfCard,\r\n\tsetCardTitle,\r\n\tsetChecklistItemCompletedOfCard,\r\n\tsetChecklistItemTextOfCard,\r\n\tupdateCoverOfCard,\r\n\tupdateDateCompletedOfCard,\r\n\tupdateDescriptionOfCard,\r\n\tupdateLabelOfCard,\r\n\tupdateLabelSelectionOfCard,\r\n\tupdateMemberOfCard,\r\n\tupdateStartDueDatesOfCard,\r\n} from '../Redux/Slices/listSlice';\r\n\r\nconst baseUrl = 'https://trello-mern-backend.onrender.com/card';\r\nlet submitCall = Promise.resolve();\r\n\r\nexport const getCard = async (cardId, listId, boardId, dispatch) => {\r\n\tdispatch(setPending(true));\r\n\ttry {\r\n\t\tlet response = '';\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.get(baseUrl + '/' + boardId + '/' + listId + '/' + cardId).then((res) => {\r\n\t\t\t\tresponse = res;\r\n\t\t\t})\r\n\t\t);\r\n\t\tawait submitCall;\r\n\r\n\t\tconst card = await JSON.parse(JSON.stringify(response.data));\r\n\t\tdispatch(setCard(card));\r\n\t\tdispatch(setPending(false));\r\n\t} catch (error) {\r\n\t\tdispatch(setPending(false));\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const titleUpdate = async (cardId, listId, boardId, title, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(setCardTitle({ listId, cardId, title }));\r\n\t\tdispatch(updateTitle(title));\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId, { title: title })\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const descriptionUpdate = async (cardId, listId, boardId, description, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(updateDescription(description));\r\n\t\tdispatch(updateDescriptionOfCard({ listId, cardId, description }));\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId, { description: description })\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const comment = async (cardId, listId, boardId, text, userName, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(setPending(true));\r\n\r\n\t\tlet response = '';\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios\r\n\t\t\t\t.post(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/add-comment', {\r\n\t\t\t\t\ttext: text,\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tresponse = res;\r\n\t\t\t\t})\r\n\t\t);\r\n\t\tawait submitCall;\r\n\r\n\t\tdispatch(addComment(response.data));\r\n\t\tdispatch(setPending(false));\r\n\t} catch (error) {\r\n\t\tdispatch(setPending(false));\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const commentUpdate = async (cardId, listId, boardId, text, commentId, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(updateComment(commentId, text));\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + commentId, {\r\n\t\t\t\ttext: text,\r\n\t\t\t})\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const commentDelete = async (cardId, listId, boardId, commentId, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(deleteComment(commentId));\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.delete(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + commentId)\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const memberAdd = async (cardId, listId, boardId, memberId, memberName, memberColor, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(addMember({ memberId, memberName, memberColor }));\r\n\t\tdispatch(updateMemberOfCard({ listId, cardId, memberId, memberName, memberColor }));\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.post(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/add-member', {\r\n\t\t\t\tmemberId: memberId,\r\n\t\t\t})\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const memberDelete = async (cardId, listId, boardId, memberId, memberName, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(deleteMember({ memberId }));\r\n\t\tdispatch(deleteMemberOfCard({ listId, cardId, memberId }));\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.delete(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + memberId + '/delete-member')\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const labelCreate = async (cardId, listId, boardId, text, color, backColor, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(createLabel({ _id: 'notUpdated', text, color, backColor, selected: true }));\r\n\r\n\t\tlet response = '';\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios\r\n\t\t\t\t.post(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/create-label', {\r\n\t\t\t\t\ttext,\r\n\t\t\t\t\tcolor,\r\n\t\t\t\t\tbackColor,\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tresponse = res;\r\n\t\t\t\t})\r\n\t\t);\r\n\t\tawait submitCall;\r\n\r\n\t\tdispatch(updateCreatedLabelId(response.data.labelId));\r\n\t\tdispatch(\r\n\t\t\tcreateLabelForCard({ listId, cardId, _id: response.data.labelId, text, color, backColor, selected: true })\r\n\t\t);\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const labelUpdate = async (cardId, listId, boardId, labelId, label, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(updateLabel({ labelId: labelId, text: label.text, color: label.color, backColor: label.backColor }));\r\n\t\tdispatch(\r\n\t\t\tupdateLabelOfCard({\r\n\t\t\t\tlistId,\r\n\t\t\t\tcardId,\r\n\t\t\t\tlabelId: labelId,\r\n\t\t\t\ttext: label.text,\r\n\t\t\t\tcolor: label.color,\r\n\t\t\t\tbackColor: label.backColor,\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + labelId + '/update-label', label)\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const labelDelete = async (cardId, listId, boardId, labelId, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(deleteLabel(labelId));\r\n\t\tdispatch(deleteLabelOfCard({ listId, cardId, labelId }));\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.delete(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + labelId + '/delete-label')\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const labelUpdateSelection = async (cardId, listId, boardId, labelId, selected, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(updateLabelSelection({ labelId: labelId, selected: selected }));\r\n\t\tdispatch(updateLabelSelectionOfCard({ listId, cardId, labelId, selected }));\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.put(\r\n\t\t\t\tbaseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + labelId + '/update-label-selection',\r\n\t\t\t\t{ selected: selected }\r\n\t\t\t)\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const checklistCreate = async (cardId, listId, boardId, title, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(createChecklist({ _id: 'notUpdated', title }));\r\n\r\n\t\tlet response = '';\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios\r\n\t\t\t\t.post(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/create-checklist', {\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tresponse = res;\r\n\t\t\t\t})\r\n\t\t);\r\n\t\tawait submitCall;\r\n\r\n\t\tdispatch(updateCreatedChecklist(response.data.checklistId));\r\n\t\tdispatch(createChecklistForCard({ listId, cardId, _id: response.data.checklistId, title }));\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const checklistDelete = async (cardId, listId, boardId, checklistId, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(deleteChecklist(checklistId));\r\n\t\tdispatch(deleteChecklistOfCard({ listId, cardId, checklistId }));\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.delete(\r\n\t\t\t\tbaseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + checklistId + '/delete-checklist'\r\n\t\t\t)\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const checklistItemAdd = async (cardId, listId, boardId, checklistId, text, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(addChecklistItem({ checklistId: checklistId, _id: 'notUpdated', text: text }));\r\n\r\n\t\tlet response = '';\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios\r\n\t\t\t\t.post(\r\n\t\t\t\t\tbaseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + checklistId + '/add-checklist-item',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext,\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tresponse = res;\r\n\t\t\t\t})\r\n\t\t);\r\n\t\tawait submitCall;\r\n\r\n\t\tdispatch(\r\n\t\t\tupdateAddedChecklistItemId({ checklistId: checklistId, checklistItemId: response.data.checklistItemId })\r\n\t\t);\r\n\t\tdispatch(\r\n\t\t\taddChecklistItemForCard({\r\n\t\t\t\tlistId,\r\n\t\t\t\tcardId,\r\n\t\t\t\tchecklistId: checklistId,\r\n\t\t\t\t_id: response.data.checklistItemId,\r\n\t\t\t\ttext: text,\r\n\t\t\t})\r\n\t\t);\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const checklistItemCompletedSet = async (\r\n\tcardId,\r\n\tlistId,\r\n\tboardId,\r\n\tchecklistId,\r\n\tchecklistItemId,\r\n\tcompleted,\r\n\tdispatch\r\n) => {\r\n\ttry {\r\n\t\tdispatch(\r\n\t\t\tsetChecklistItemCompleted({\r\n\t\t\t\tchecklistId: checklistId,\r\n\t\t\t\tchecklistItemId: checklistItemId,\r\n\t\t\t\tcompleted: completed,\r\n\t\t\t})\r\n\t\t);\r\n\t\tdispatch(\r\n\t\t\tsetChecklistItemCompletedOfCard({\r\n\t\t\t\tlistId,\r\n\t\t\t\tcardId,\r\n\t\t\t\tchecklistId: checklistId,\r\n\t\t\t\tchecklistItemId: checklistItemId,\r\n\t\t\t\tcompleted: completed,\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.put(\r\n\t\t\t\tbaseUrl +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tboardId +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tlistId +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tcardId +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tchecklistId +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tchecklistItemId +\r\n\t\t\t\t\t'/set-checklist-item-completed',\r\n\t\t\t\t{\r\n\t\t\t\t\tcompleted,\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const checklistItemTextSet = async (cardId, listId, boardId, checklistId, checklistItemId, text, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(setChecklistItemText({ checklistId: checklistId, checklistItemId: checklistItemId, text: text }));\r\n\t\tdispatch(\r\n\t\t\tsetChecklistItemTextOfCard({\r\n\t\t\t\tlistId,\r\n\t\t\t\tcardId,\r\n\t\t\t\tchecklistId: checklistId,\r\n\t\t\t\tchecklistItemId: checklistItemId,\r\n\t\t\t\ttext: text,\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.put(\r\n\t\t\t\tbaseUrl +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tboardId +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tlistId +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tcardId +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tchecklistId +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tchecklistItemId +\r\n\t\t\t\t\t'/set-checklist-item-text',\r\n\t\t\t\t{\r\n\t\t\t\t\ttext,\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const checklistItemDelete = async (cardId, listId, boardId, checklistId, checklistItemId, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(deleteChecklistItem({ checklistId: checklistId, checklistItemId: checklistItemId }));\r\n\t\tdispatch(\r\n\t\t\tdeleteChecklistItemOfCard({ listId, cardId, checklistId: checklistId, checklistItemId: checklistItemId })\r\n\t\t);\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.delete(\r\n\t\t\t\tbaseUrl +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tboardId +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tlistId +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tcardId +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tchecklistId +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tchecklistItemId +\r\n\t\t\t\t\t'/delete-checklist-item'\r\n\t\t\t)\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const startDueDatesUpdate = async (cardId, listId, boardId, startDate, dueDate, dueTime, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(updateStartDueDates({ startDate, dueDate, dueTime }));\r\n\t\tdispatch(updateStartDueDatesOfCard({ listId, cardId, startDate, dueDate, dueTime }));\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/update-dates', {\r\n\t\t\t\tstartDate,\r\n\t\t\t\tdueDate,\r\n\t\t\t\tdueTime,\r\n\t\t\t})\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const dateCompletedUpdate = async (cardId, listId, boardId, completed, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(updateDateCompleted(completed));\r\n\t\tdispatch(updateDateCompletedOfCard({ listId, cardId, completed }));\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/update-date-completed', {\r\n\t\t\t\tcompleted,\r\n\t\t\t})\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const attachmentAdd = async (cardId, listId, boardId, link, name, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(addAttachment({ link: link, name: name, _id: 'notUpdated', date: Date() }));\r\n\r\n\t\tlet response = '';\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios\r\n\t\t\t\t.post(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/add-attachment', {\r\n\t\t\t\t\tlink: link,\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tresponse = res;\r\n\t\t\t\t})\r\n\t\t);\r\n\t\tawait submitCall;\r\n\r\n\t\tdispatch(updateAddedAttachmentId(response.data.attachmentId));\r\n\t\tdispatch(\r\n\t\t\taddAttachmentForCard({\r\n\t\t\t\tlistId,\r\n\t\t\t\tcardId,\r\n\t\t\t\tlink: link,\r\n\t\t\t\tname: name,\r\n\t\t\t\t_id: response.data.attachmentId,\r\n\t\t\t\tdate: Date(),\r\n\t\t\t})\r\n\t\t);\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const attachmentDelete = async (cardId, listId, boardId, attachmentId, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(deleteAttachment(attachmentId));\r\n\t\tdispatch(deleteAttachmentOfCard({ listId, cardId, attachmentId }));\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.delete(\r\n\t\t\t\tbaseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + attachmentId + '/delete-attachment'\r\n\t\t\t)\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const attachmentUpdate = async (cardId, listId, boardId, attachmentId, link, name, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(updateAttachment({ attachmentId: attachmentId, link: link, name: name }));\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.put(\r\n\t\t\t\tbaseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/' + attachmentId + '/update-attachment',\r\n\t\t\t\t{ link: link, name: name }\r\n\t\t\t)\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const coverUpdate = async (cardId, listId, boardId, color, isSizeOne, dispatch) => {\r\n\ttry {\r\n\t\tdispatch(updateCover({ color: color, isSizeOne: isSizeOne }));\r\n\t\tdispatch(updateCoverOfCard({ listId, cardId, color, isSizeOne }));\r\n\r\n\t\tsubmitCall = submitCall.then(() =>\r\n\t\t\taxios.put(baseUrl + '/' + boardId + '/' + listId + '/' + cardId + '/update-cover', {\r\n\t\t\t\tcolor: color,\r\n\t\t\t\tisSizeOne: isSizeOne,\r\n\t\t\t})\r\n\t\t);\r\n\t\tawait submitCall;\r\n\t} catch (error) {\r\n\t\tdispatch(\r\n\t\t\topenAlert({\r\n\t\t\t\tmessage: error?.response?.data?.errMessage ? error.response.data.errMessage : error.message,\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}